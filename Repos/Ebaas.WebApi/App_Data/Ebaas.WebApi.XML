<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ebaas.WebApi</name>
    </assembly>
    <members>
        <member name="T:Ebaas.WebApi.Controllers.AdminServiceController">
            <summary>
            Represents a service that perform system admin related tasks for admin tools
            </summary>
            <version>  	1.0.0 01 April 2016 </version>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.GetServerVersion">
            <summary>
            Gets the version of server.
            </summary>
            <returns>Server version</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.IsDataSourceValid(System.String,System.String)">
            <summary>
            Gets the information indicating whether a specified data source name is valid or
            not
            </summary>
            <param name="databaseType">The database type string</param>
            <param name="dataSourceName">Data Source Name</param>
            <returns>True if it is valid data source name, false otherwise</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.NeedCreateDatabase(System.String,System.String)">
            <summary>
            Gets the information indicating whether a new SQL Server Database needs to be
            created or not for Newtera Enterprise Catalog Manangement
            </summary>
            <param name="databaseType">The database type string</param>
            <param name="dataSourceName">Data Source Name</param>
            <returns>True if a database needs to be created, false otherwise</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.CreateDatabase(System.String,System.String)">
            <summary>
            Create a SQL Server Compact Database
            </summary>
            <param name="databaseType">The database type string</param>
            <param name="dataSourceName">Data Source Name</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.NeedCreateTablespace(System.String,System.String)">
            <summary>
            Gets the information indicating whether a special tablespace needs to be
            created or not for Newtera Enterprise Catalog Manangement
            </summary>
            <param name="databaseType">The database type string</param>
            <param name="dataSourceName">Data Source Name</param>
            <returns>True if a tablespace needs to be created, false otherwise</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.CreateTablespace(System.String,System.String)">
            <summary>
            Create a special tablespace for Newtera Enterprise Catalog Manangement using
            an user account with DBA privilege.
            </summary>
            <param name="databaseType">The database type string.</param>
            <param name="dataSourceName">The data source Name.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.UpdateSchema(System.String,System.String)">
            <summary>
            Create or update a DB schema
            </summary>
            <param name="databaseType">The database type string.</param>
            <param name="dataSourceName">The data source Name.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.UpdateServerConfig(System.String,System.String)">
            <summary>
            Update the server config file with new appsettings.
            </summary>
            <param name="databaseType">The database type string.</param>
            <param name="dataSourceName">The data source Name.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.GetAppSchemaList">
            <summary>
            Get application schema list in a xml string
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.GetAppHomeDir">
            <summary>
            Gets home directory where Newtera Server is installed.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.GetServerId">
            <summary>
            Gets ID of Newtera Server installed.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.SetupAppSchemas">
            <summary>
            Setup an application schemas.
            </summary>
            <param name="schemaFileNames">An array of app schema file names</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.GetServerLogText">
            <summary>
            Get server error log text
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.ClearServerLog">
            <summary>
            Clear server error log
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.GetServerTraceLog">
            <summary>
            Get server error log text
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.ClearTraceLog">
            <summary>
            Clear server error log
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.GetServerUrl">
            <summary>
            Get server url from the sever config file
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.SetServerUrl">
            <summary>
            Set a server url to the server config file
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.GetScriptFiles(Newtera.Server.DB.IDataProvider,System.Data.IDbCommand)">
            <summary>
            A collection of script file names that contains DDLs to be applied to
            the current DB schema.
            </summary>
            <param name="dataProvider">The data provider</param>
            <param name="cmd">IDbCommand object</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.ExecuteScriptFile(Newtera.Server.DB.IDataProvider,System.String,System.Data.IDbCommand)">
            <summary>
            Execute the DDLs contains in a given script file against the DB
            Schema.
            </summary>
            <param name="dataProvider">The data provider</param>
            <param name="scriptFileName">The script file name</param>
            <param name="cmd">IDbCommand</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.GetConnectionStr(System.String)">
            <summary>
            Get a connection string for the specified schema
            </summary>
            <param name="schemaName">The schema name</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.GetSchemaListDocument">
            <summary>
            Get an XmlDocument containing a list of application schema definitions
            </summary>
            <returns>An XmlDocument</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AdminServiceController.GetConnectionString(Newtera.Server.DB.DatabaseType,System.String)">
            <summary>
            Get a connection string
            </summary>
            <param name="databaseType">Database type</param>
            <param name="dataSource">The data source</param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.LoggingServiceController">
            <summary>
            Represents a service that perform application data related tasks for admin tools
            </summary>
            <version>  	1.0.0 01 April 2016 </version>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.LoggingServiceController.GetLoggingMetaData">
            <summary>
            Gets meta data in xml string array for the LoggingInfo schema
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.LoggingServiceController.ExecuteLoggingQuery">
            <summary>
            Execute a query and return the logging messages in XmlDocument
            </summary>
            <param name="query">An XQuery to be executed.</param>
            <returns>The query result in XmlDocument</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.LoggingServiceController.ExecuteLoggingCount">
            <summary>
            Execute a query and return the count of resulting logging messages.
            </summary>
            <param name="query">An XQuery to be executed.</param>
            <returns>The count of resulting instances</returns>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.AppDataServiceController">
            <summary>
            Represents a service that perform application data related tasks for admin tools
            </summary>
            <version>  	1.0.0 01 April 2016 </version>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.ExecuteQuery">
            <summary>
            Execute a query and return the result in XmlDocument
            </summary>
            <param name="query">An XQuery to be executed.</param>
            <returns>The query result in XmlDocument</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.BeginQuery(System.Int32)">
            <summary>
            Prepare to execute a lenghty query. 
            </summary>
            <param name="connectionStr">The connection string indicating the schema to query against</param>
            <param name="query">An XQuery to be executed.</param>
            <param name="pageSize">The size of each return page of result.</param>
            <returns>An unique query id to identify the CMDataReder.</returns>
            <remarks>Begin a query by creating a CMDataReader, generating an unique query id,
            save the CMDataReader in the cache along with the id, return the id to
            the client.</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.GetNextResult(System.String)">
            <summary>
            Get a page of result in XmlDocument. 
            </summary>
            <param name="connectionStr">The connection string indicating the schema to query against</param>
            <param name="queryId">The id to identify the CMDataReader in the cache.</param>
            <returns>The query result in XmlDocument</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.EndQuery(System.String)">
            <summary>
            Finish a lengthy query by closing the reader.
            </summary>
            <param name="queryId">The id to identify the CMDataReader in the cache.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.ExecuteUpdateQuery(System.Boolean)">
            <summary>
            Execute an update statement and return obj_id(s) of the instance(s) that have
            been involved. This method can be used to execute insert, update, and
            delete queries.
            </summary>
            <param name="connectionStr">The connection string indicating the schema to query against</param>
            <param name="query">An XQuery to be executed.</param>
            <param name="needToRaiseEvents">indicates whether to raise events for the update</param>
            <returns>The comma separated obj_id(s)</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.ExecuteValidatingQuery">
            <summary>
            Execute a validating query and return the validate result in xml string.
            </summary>
            <param name="connectionStr">The connection string indicating the schema to query against</param>
            <param name="query">An XQuery to be executed.</param>
            <returns>The validating result in xml string.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.DeleteAllInstances(System.String)">
            <summary>
            Delete all instances of a given class.
            </summary>
            <param name="className">The given class name.</param>
            <returns>The number of instances deleted.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.GenerateXmlDoc(System.String,System.String)">
            <summary>
            Get a xml document generated based on a xml schema for the instance(s) of a base class retrived by a query
            </summary>
            <param name="xmlSchemaName">The name of  xml schema in the meta data.</param>
            <param name="baseClassName">The base class name of the instance(s)</param>
            <returns>The generated xml in XmlDocument</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.IsExternalFullTextSearch">
            <summary>
            Build full-text index for a given class.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.BuildFullTextIndex(System.String,System.Threading.CancellationToken)">
            <summary>
            Build full-text index for a given class.
            </summary>
            <param name="className">The given class name.</param>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.ExecuteUpdateQueries">
            <summary>
            Execute multiple update statements and return obj_id(s) of the instance(s) that have
            been involved. This method can be used to execute insert, update, and
            delete queries.
            </summary>
            <param name="connectionStr">The connection string indicating the schema to query against</param>
            <param name="queries">An array of update quries to be executed.</param>
            <returns>The comma separated obj_id(s)</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.ExecuteCount">
            <summary>
            Execute a query and return the count of resulting instances.
            </summary>
            <param name="connectionStr">The connection string indicating the schema to query against</param>
            <param name="query">An XQuery to be executed.</param>
            <returns>The count of resulting instances</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.GetInstanceCount(System.String)">
            <summary>
            Get the number of instances in a class.
            </summary>
            <param name="connectionStr">The connection string indicating the schema to query against</param>
            <param name="className">The class name.</param>
            <returns>The count of instances in a class</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.ResetDataCache">
            <summary>
            Reset data cache
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.ExecuteImportScripts(System.Int32)">
            <summary>
            Execute import scripts
            </summary>
            <param name="connectionStr">The connection string indicating the schema to query against</param>
            <param name="xmlString">A XML string containing import scripts</param>
            <param name="chunkIndex">The index of the chunked data to be imported</param>
            <returns>A XML string containing script execution status</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.BeginImport">
            <summary>
            Begine to import by generating sql actions from a xquery, save the actions in the cache, and return an id
            to identify the actions. 
            </summary>
            <param name="connectionStr">The connection string indicating the schema to query against</param>
            <param name="xquery">An xquery that is used to generate sql actions.</param>
            <returns>An unique id used when calling ImportNext method to identify the SQL actions.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.ImportNext(System.String,System.String,System.Int32)">
            <summary>
            Import a block of data instances to the specified class. 
            </summary>
            <param name="connectionStr">The connection string indicating the schema to query against</param>
            <param name="importId">The id to identify the sql actions in the cache.</param>
            <param name="className">Name of the class to which to import data instances.</param>
            <param name="xmlString">The xml string generated from a DataSet.</param>
            <param name="chunkIndex">The index of the chunked data to be imported</param>
            <returns>A XML string containing import status</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AppDataServiceController.EndImport(System.String)">
            <summary>
            Finish an import task.
            </summary>
            <param name="importId">The id to identify the import template in the cache.</param>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.MasterServerServiceController">
            <summary>
            The service that provides caching, id generation and other api if the server is a master server
            </summary>
            <version>  	1.0.0 11 Nov 2018 </version>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MasterServerServiceController.GetTaskInfos(System.String)">
            <summary>
            Get a xml string representing a list of TaskInfo objects that are associated with an user
            </summary>
            <param name="userName">The suer name</param>
            <returns>a xml string</returns>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController">
            <summary>
            Represents a service that perform meta-data related tasks for admin tools
            </summary>
            <version>  	1.0.0 01 April 2016 </version>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.GetTrackingWorkflowInstanceCount(System.String)">
            <summary>
            Gets count of for NewteraTrackingWorkflowInstance a given workflow type from tracking service located
            at the server
            </summary>
            <param name="connectionStr">connection string</param>
            <param name="workflowTypeId">The unique workflow type internal id</param>
            <param name="workflowEvent">The type of workflow event</param>
            <param name="from">Start time</param>
            <param name="until">Until time</param>
            <param name="useCondition">Information indicating whether to use the provided condition for querying.</param>
            <returns>The workflow instance count</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.GetTrackingWorkflowInstances(System.String)">
            <summary>
            Gets a collection of NewteraTrackingWorkflowInstance in xml for a given workflow type from tracking service
            </summary>
            <param name="workflowTypeId">The unique workflow type internal id</param>
            <param name="from">Start time</param>
            <param name="until">Until time</param>
            <param name="useCondition">Information indicating whether to use the provided condition for querying.</param>
            <param name="pageIndex">The page index</param>
            <param name="pageSize">The page size</param>
            <returns>A xml string that can be restored as a NewteraTrackingWorkflowInstanceCollection object</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.GetTrackingWorkflowInstance(System.String)">
            <summary>
            Gets a NewteraTrackingWorkflowInstance in xml for a given workflow instance from the tracking service.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="workflowInstanceId"> The unique workflow instance id</param>
            <returns>A xml string that can be restored as a NewteraTrackingWorkflowInstanceCollection object</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.CancelWorkflowInstance(System.String)">
            <summary>
            Cancel a workflow instance that is awaiting an event.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="workflowInstanceId"> The unique workflow instance id</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.CancelActivity(System.String,System.String)">
            <summary>
            Cancel a workflow activity that is awaiting an event.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="workflowInstanceId"> The unique workflow instance id</param>
            <param name="activityName">Name of an activity to be cancelled.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.DeleteTrackingWorkflowInstance(System.String)">
            <summary>
            Delete tracking data from the database of a workflow instance.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="workflowInstanceId"> The unique workflow instance id</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.GetTaskInfos(System.String)">
            <summary>
            Get a list of TaskInfo objects that are associated with a workflow instance
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="workflowInstanceId"> The unique workflow instance id</param>
            <returns>A list of TaskInfo objects</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.GetBindingDataInstanceInfo(System.String)">
            <summary>
            Get information of the data instance that has been bound to a workflow instance.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="workflowInstanceId"> The unique workflow instance id</param>
            <returns>The binding info, null if no binding data instance exists.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.GetBindingDataInstanceIds(System.String,System.Int32,System.Int32)">
            <summary>
            Get ids of the data instances that has been bound to workflow instances.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="schemaId"> Indicate the database where the data instances exist</param>
            <param name="pageSize"> The number of ids returned each call</param>
            <param name="pageIndex"> The index of current page</param>
            <returns>A string array of data instance ids, null if it reaches the end of result.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.ReplaceBindingDataInstanceId(System.String,System.String)">
            <summary>
            Replace the old id of a binding data instance with a new id. This method is used when
            restore a database from a backup file in which new ids are created for each data instance.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="oldInstanceId"> The old instance id</param>
            <param name="newInstanceId"> The new instance id</param>        
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.GetWorkflowInstanceStateInfo(System.String)">
            <summary>
            Get the state information of a workflow instance.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="workflowInstanceId"> The unique workflow instance id</param>
            <returns>The state info.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.GetDBEventSubscriptions(System.String)">
            <summary>
            Get a collection of database event subscriptions of a workflow instance.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="workflowInstanceId"> The unique workflow instance id</param>
            <returns>The state info.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.GetWorkflowEventSubscriptions(System.String)">
            <summary>
            Get a collection of workflow event subscriptions of a workflow instance.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="workflowInstanceId"> The unique workflow instance id</param>
            <returns>The state info.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.SetTrackingWorkflowInstances(System.String)">
            <summary>
            Sets a xml string representing a collection of NewteraTrackingWorkflowInstance
            for a given workflow type. Used by the project restore tool
            </summary>
            <param name="connectionStr">connection string</param>
            <param name="workflowTypeId">The unique workflow internal type id</param>
            <param name="xmlString">a xml string representing a collection of NewteraTrackingWorkflowInstance.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.SetWorkflowInstanceStateInfo">
            <summary>
            Sets a workflow instance state info to the database. Used by the project restore tool
            </summary>
            <param name="connectionStr">connection string</param>
            <param name="stateInfo">A workflow instance state info.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.SetWorkflowEventSubscriptions">
            <summary>
            Sets a collection of a workflow instance's subscriptions to workflow events. Used by the project restore tool
            </summary>
            <param name="connectionStr">connection string</param>
            <param name="xmlString">A xml string representing a collection of subscriptions to workflow events.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.SetDBEventSubscriptions">
            <summary>
            Sets a collection of a workflow instance's subscriptions to database events. Used by the project restore tool
            </summary>
            <param name="connectionStr">connection string</param>
            <param name="xmlString">A xml string representing a collection of subscriptions to database events.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.SetBindingDataInstanceInfos(System.String)">
            <summary>
            Sets a collection of a workflow instance's binding to database instances. Used by the project restore tool
            </summary>
            <param name="connectionStr">connection string</param>
            <param name="workflowTypeId">The unique workflow internal type id</param>
            <param name="xmlString">A xml string representing a collection of a workflow instance's binding to database instances.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTrackingServiceController.SetTaskInfos">
            <summary>
            Sets a collection of a workflow instance's task infos. Used by the project restore tool
            </summary>
            <param name="connectionStr">connection string</param>
            <param name="taskInfos">A xml string representing a collection of a workflow instance's task infos.</param>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.WorkflowTaskServiceController">
            <summary>
            Represents a service that perform meta-data related tasks for admin tools
            </summary>
            <version>  	1.0.0 01 April 2016 </version>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTaskServiceController.GetTaskCount(System.String)">
            <summary>
            Get count of tasks that are associated with an user
            </summary>
            <param name="connectionStr">The connection string, contains user id</param>
            <param name="userName">User name</param>
            <returns>A count</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTaskServiceController.GetTaskInfos(System.String)">
            <summary>
            Get a xml string representing a list of TaskInfo objects that are associated with an user
            </summary>
            <param name="connectionStr">The connection string, contains user id</param>
            <param name="userName">The suer name</param>
            <returns>a xml string</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowTaskServiceController.IsValidSchema(System.String,System.String)">
            <summary>
            Gets information indicating whether the given schema it a valid schema
            </summary>
            <param name="schemaName">The given schema name</param>
            <param name="schemaVersion">The given schema version, can be null, default is 1.0</param>
            <returns>True if it is a valid schema, false otherwise.</returns>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.WorkflowModelServiceController">
            <summary>
            Represents a service that perform meta-data related tasks for admin tools
            </summary>
            <version>  	1.0.0 01 April 2016 </version>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.GetExistingProjectInfos">
            <summary>
            Gets project infos of the existing workflow projects that exist in the database.
            </summary>
            <returns>An array of ProjectInfo</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.GetProject(System.String,System.String)">
            <summary>
            get the project model from database as xml string
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="projectName">The project name</param>
            <param name="projectVersion">The project version</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.GetProjectPolicy(System.String,System.String)">
            <summary>
            Get a project's access control policy from database as xml string
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="projectName">The project name</param>
            <param name="projectVersion">The project version</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.SaveProject(System.String,System.String)">
            <summary>
            Save the project model to database
            </summary>
            <param name="projectName">The project name</param>
            <param name="projectVersion">The project version</param>
            <returns>The modified time of projetc model</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.DeleteProject(System.String,System.String)">
            <summary>
            Delete a project model from database
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="projectName">The name of project to be deleted</param>
            <param name="projectVersion">The project version</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.HasRules(System.String,System.String,System.String)">
            <summary>
            Gets the information indicating whether a workflow has rules data
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="projectName">The name of project</param>
            <param name="projectVersion">Project version</param>
            <param name="workflowName">The workflow name</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.HasLayout(System.String,System.String,System.String)">
            <summary>
            Gets the information indicating whether a workflow has layout data
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="projectName">The name of project</param>
            <param name="projectVersion">The project version</param>
            <param name="workflowName">The workflow name</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.GetWorkflowData(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the indicated data of the given workflow from database
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="projectName">The name of project</param>
            <param name="projectVersion">The project version</param>
            <param name="workflowName">The workflow name</param>
            <param name="dataTypestr">Data type string</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.SetWorkflowData(System.String,System.String,System.String,System.String)">
            <summary>
            Sets the indicated data of the given workflow to database
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="projectName">The name of project</param>
            <param name="projectVersion">The project version</param>
            <param name="workflowName">The workflow name</param>
            <param name="dataTypestr">Data type string indicate whether it is a xoml, layout, rules, or code</param>
            <param name="dataString">The data string</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.StartWorkflow(System.String,System.String,System.String)">
            <summary>
            Start a workflow instance
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="projectName">The project name</param>
            <param name="projectVersion">The project version</param>
            <param name="workflowName">The workflow name</param>
            <returns>The id of the started workflow instance</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.LockProject(System.String,System.String)">
            <summary>
            Lock specified project for update.
            </summary>
            <param name="projectName">Name of the project to be locked</param>
            <param name="projectVersion">The project version</param>
            <param name="connectionStr">The connection string</param>
            <exception cref="!:LockProjectException">Thrown if the project has been locked by another user</exception>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.UnlockProject(System.String,System.String,System.Boolean)">
            <summary>
            Unlock the specified project.
            </summary>
            <param name="projectName">Name of the project to be unlocked</param>
            <param name="projectVersion">The project version</param>
            <param name="connectionStr">The connection string</param>
            <param name="forceUnlock">true if the unlock is forced by user, false if the unlock is resulting as disconnection.</param>
            <exception cref="!:LockProjectException">Thrown if the user does have the permission to unlock the project.</exception>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.GetAuthorizedSchemaInfos">
            <summary>
            Gets authorized schema infos.
            </summary>
            <param name="connectionStr">The connection string</param>
            <returns>An array of SchemaInfo instances</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.GetDBARole(System.String,System.String)">
            <summary>
            Gets name of the role that has permission to modify the project
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="projectName">The project name</param>
            <param name="projectVersion">The project version</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.SetDBARole(System.String,System.String)">
            <summary>
            Sets name of the role that has permission to modify the project
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="projectName">The project name</param>
            <param name="projectVersion">The project version</param>
            <param name="role">The role</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.HasRunningInstances(System.String,System.String,System.String)">
            <summary>
            Gets the information indicating whether a workflow model has running instances.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="projectName">The project name</param>
            <param name="projectVersion">The project version</param>
            <param name="workflowId">The workflow Id</param>
            <returns>true if it has running instances, false otherwise.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.GetWorkflowModelID(System.String,System.String,System.String)">
            <summary>
            Gets the id of a workflow model given the name.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="projectName">The project name</param>
            <param name="projectVersion">The project version</param>
            <param name="workflowName">The workflow Name</param>
            <returns>The id of the found workflow model, null if the workflow model does not exist.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.IsLatestVersion(System.String,System.String)">
            <summary>
            Gets the information indicating whether a project is the latest version.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="projectName">The project name</param>
            <param name="projectVersion">The project version</param>
            <returns>true if it has running instances, false otherwise.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.IsQueryValid">
            <summary>
            Gets the information indicating whether a XQuery is valid.
            An xquery kept in a workflow activity may become invalid if the database schema is changed.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="query">The xquery</param>
            <returns>true if it is valid, false otherwise.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.IsValidCustomFunctionDefinition">
            <summary>
            Gets the information indicating whether the format of a custom function definition is correct.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="functionDefinition">A custom function definition</param>
            <returns>true if it is valid, false otherwise.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.ValidateActionCode(System.String,System.String)">
            <summary>
            Validate the action code.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="actionCode">The action code</param>
            <param name="schemaId">The schema id indicates the schema where the instance class resides</param>
            <param name="instanceClassName">The class name of the instance to which the action code is run against</param>
            <returns>Error message if the action code is invalid, null if the action code is valid.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.GetTaskSubstituteModel">
            <summary>
            get the task substitute model from database as xml string
            </summary>
            <param name="connectionStr">The connection string</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.UpdateTaskSubstituteModel">
            <summary>
            Update the task substitute model in database
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="xml">The task substitute xml string</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.LockTaskSubstituteModel">
            <summary>
            Lock the task substitute model for update.
            </summary>
            <param name="connectionStr">The connection string</param>
            <exception cref="!:LockProjectException">Thrown if the project has been locked by another user</exception>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.WorkflowModelServiceController.UnlockTaskSubstituteModel(System.Boolean)">
            <summary>
            Unlock the task substitute model.
            </summary>
            <param name="forceUnlock">true if the unlock is forced by user, false if the unlock is resulting as disconnection.</param>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.MetaDataServiceController">
            <summary>
            Represents a service that perform meta-data related tasks for admin tools
            </summary>
            <version>  	1.0.0 01 April 2016 </version>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetSchemaInfos">
            <summary>
            Gets schema infos.
            </summary>
            <returns>An array of SchemaInfo instances</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetMetaData">
            <summary>
            Gets meta data in xml string array
            </summary>
            <param name="connectionStr">The connection string</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetSchemaModel">
            <summary>
            Gets schema model in xml schema string
            </summary>
            <param name="connectionStr">The connection string</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetClassTree">
            <summary>
            Gets a class tree as JObject
            </summary>
            <param name="connectionStr">The connection string</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.SetMetaData">
            <summary>
            Write schema model in xml schema string to database
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="xmlStrings">Xml strings representing meta data.</param>
            <returns>The time when the meta-data model is modified.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.SetSchemaModel">
            <summary>
            Write schema model in xml schema string to database
            </summary>
            <param name="connectionStr">The connection string</param>
            <returns>The time when the meta-data model is modified.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.FixSchemaModel">
            <summary>
            Fix an schema model by detecting the discrepancies between the schema
            model definitions and its corresponding database definitions, and then
            try to fix the discrepancies on the database side.
            </summary>
            <param name="connectionStr">The connection string</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetDataViews">
            <summary>
            Gets data views in a xml string
            </summary>
            <param name="connectionStr">The connection string</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.SetDataViews">
            <summary>
            Write data views in xml string to database
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="xmlString">An xml string representing data views of a schema</param>
            <returns>The time when the meta-data model is modified.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.SetXaclPolicy">
            <summary>
            Write xacl policy in xml string to database
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="xmlString">An xml string representing xacl policy of a schema</param>
            <returns>The time when the meta-data model is modified.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.SetTaxonomies">
            <summary>
            Write taxonomies in xml string to database
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="xmlString">An xml string representing taxonomies of a schema</param>
            <returns>The time when the meta-data model is modified.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.SetXMLSchemaViews">
            <summary>
            Write xml schema views in xml string to database
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="xmlString">An xml string representing xml schema views</param>
            <returns>The time when the meta-data model is modified.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.SetRules">
            <summary>
            Write rules in xml string to database
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="xmlString">An xml string representing rules of a schema</param>
            <returns>The time when the meta-data model is modified.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.DeleteMetaData">
            <summary>
            Delete a meta data in database
            </summary>
            <param name="connectionStr">The connection string indicating the meta data</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetMetaDataUpdateLog">
            <summary>
            Get the latest log of updating a meta data in database
            </summary>
            <param name="connectionStr">The connection string indicating the meta data</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetTransformerId">
            <summary>
            Get an unique id for transformer
            </summary>
            <param name="connectionStr">The connection string indicating the meta data</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.IsValueGeneratorExist">
            <summary>
            Get information indicating whether a given value generator exists on server side or not
            </summary>
            <param name="valueGeneratorDef">The vaue generator definition string in form of "class,lib"</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.ValidateXQueryCondition(System.String)">
            <summary>
            Gets the information indicating whether a xquery condition is valid or not .
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="className">The class name that the condition is defined</param>
            <param name="condition">A xquery condition string</param>
            <returns>error mesage if it is invalid.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.IsValidCustomFunctionDefinition">
            <summary>
            Gets the information indicating whether the format of a custom function definition is correct.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="functionDefinition">A custom function definition</param>
            <returns>true if it is valid, false otherwise.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.SearchXmlDataSource">
            <summary>
            Get a result in form of XMLDocument by executing a XQuery on server side XMLDataSourceService
            </summary>
            <param name="xquery">The xquery</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.ValidateMethodCode(System.String,System.String)">
            <summary>
            Validate a class method code.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="code">The method code</param>
            <param name="schemaId">The schema id indicates the schema where the instance class resides</param>
            <param name="instanceClassName">The class name of the instance to which the code is run against</param>
            <returns>Error message if the method code is invalid, null if the action code is valid.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetDBARole">
            <summary>
            Gets name of the role that has permission to modify the meta data
            </summary>
            <param name="connectionStr">The connection string indicating the meta data</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.SetDBARole(System.String)">
            <summary>
            Sets name of the role that has permission to modify the meta data
            </summary>
            <param name="connectionStr">The connection string indicating the meta data</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.LockMetaData">
            <summary>
            Lock the meta data specified in the connection string for update.
            </summary>
            <param name="connectionStr">The connection string</param>
            <exception cref="T:Newtera.Server.Engine.Cache.LockMetaDataException">Thrown if the meta data has been locked by another user</exception>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.UnlockMetaData(System.Boolean)">
            <summary>
            Unlock the meta data specified in the connection string.
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="forceUnlock">true if the unlock is forced by user, false if the unlock is resulting as disconnection.</param>
            <exception cref="T:Newtera.Server.Engine.Cache.LockMetaDataException">Thrown if the user does have the permission to unlock the meta-data.</exception>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetSiteMapModels">
            <summary>
            Gets all sitemap models in a xml string
            </summary>
            <returns>All sitemap model specs in xml string</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.SetSiteMapModels">
            <summary>
            Write specs of sitemap models in xml string.
            </summary>
            <param name="data">An xml string representing specs of site map models.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetSiteMap(System.String)">
            <summary>
            Gets the sitemap in a xml string
            </summary>
            <param name="modelName">The name of a sitemap model, null indicate the default sitemap</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetSiteMapFromFile(System.String)">
            <summary>
            Gets the sitemap in a xml string from a file, return null if the file doesn't exist
            </summary>
            <param name="fileName">The name of a sitemap file</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.SetSiteMap(System.String)">
            <summary>
            Write sitemap in xml string.
            </summary>
            <param name="modelName">The name of a sitemap model, null indicate the default sitemap</param>
            <param name="xmlString">An xml string representing site map definition.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetSideMenu(System.String)">
            <summary>
            Gets the sidemenu in a xml string
            </summary>
            <param name="modelName">The name of a sitemap model, null indicate the default sitemap</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetSideMenuFromFile(System.String)">
            <summary>
            Gets the sidemenu in a xml string from a file, return null if the file doesn't exist
            </summary>
            <param name="fileName">The name of a side menu file</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.SetSideMenu(System.String)">
            <summary>
            Write sidemenu in xml string.
            </summary>
            <param name="modelName">The name of a sitemap model, null indicate the default sitemap</param>
            <param name="xmlString">An xml string representing side menu definition.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetCustomCommandSet(System.String)">
            <summary>
            Gets the custom command set in a xml string
            </summary>
            <param name="modelName">The name of a sitemap model, null indicate the default sitemap</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetCustomCommandSetFromFile(System.String)">
            <summary>
            Gets the custom command set in a xml string from a file, return null if the file doesn't exist
            </summary>
            <param name="fileName">The name of a side menu file</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.SetCustomCommandSet(System.String)">
            <summary>
            Write custom command set in xml string.
            </summary>
            <param name="modelName">The name of a sitemap model, null indicate the default sitemap</param>
            <param name="xmlString">An xml string representing custom command definitions.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetSiteMapAccessPolicy(System.String)">
            <summary>
            Gets the sitemap access policy in a xml string.
            </summary>
            <param name="modelName">The name of a sitemap model, null indicate the default sitemap</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetSiteMapAccessPolicyFromFile(System.String)">
            <summary>
            Gets the sitemap access policy in a xml string from a file, return null if the file doesn't exist
            </summary>
            <param name="fileName">The name of a side menu file</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.SetSiteMapAccessPolicy(System.String)">
            <summary>
            Write sitemap access policy in xml string.
            </summary>
            <param name="modelName">The name of a sitemap model, null indicate the default sitemap</param>
            <param name="xmlString">An xml string representing side menu definition.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetFormTemplatesFileNames(System.String,System.String)">
            <summary>
            Gets the names of form templates.
            </summary>
            <param name="schemaId">Indicates the schema that form templates belong to </param>
            <param name="className">Indicates the class that form templates belong to .</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetReportTemplatesFileNames(System.String,System.String)">
            <summary>
            Gets the names of Word report templates.
            </summary>
            <param name="schemaId">Indicates the schema that Word templates belong to </param>
            <param name="className">Indicates the class that Word templates belong to .</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetWorklowNames(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the names of worfklows.
            </summary>
            <param name="projectName">The project that the workflows belong to</param>
            <param name="projectVersion">The project version that workflows belong to</param>
            <param name="schemaId">Indicates the schema that workflows are bound to </param>
            <param name="className">Indicates the class that workflows are bound to </param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetImageNames">
            <summary>
            Get names of images for enum values in a specific directory
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetImageBytes(System.String)">
            <summary>
            Get bytes of an image
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataServiceController.GetXMLSchemas">
            <summary>
            Gets an array of xml schema basic infos of a class
            </summary>
            <param name="connectionStr">The connection string</param>
            <param name="className">The class name</param>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.AccountsController">
            <summary>
            The Accounts Service allows you to manage user accounts and roles in your application.
            It has a set of APIS operations for reading, creating, updating, deleting users or roles and
            assigning roles to users.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AccountsController.GetUsers">
            <summary>
            Get information of all users
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AccountsController.GetUser(System.String)">
            <summary>
            Get the account info of a user by id
            </summary>
            <param name="Id">The unique id of a user</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AccountsController.GetUserByName(System.String)">
            <summary>
            Get the account info of a user by name
            </summary>
            <param name="username">The username for sign in</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AccountsController.CreateUser(Ebaas.WebApi.Models.CreateUserBindingModel)">
            <summary>
            Create an account for a user
            </summary>
            <param name="createUserModel">The account info</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AccountsController.UpdateUser(Ebaas.WebApi.Models.UpdateUserBindingModel)">
            <summary>
            Update the account info of a user
            </summary>
            <param name="updateUserModel">The updated account info</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AccountsController.ConfirmEmail(System.String,System.String)">
            <summary>
            Confirm a user's email
            </summary>
            <param name="userId">The user's id</param>
            <param name="code">The confirmed email</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AccountsController.ChangePassword(Ebaas.WebApi.Models.ChangePasswordBindingModel)">
            <summary>
            Change a user's password
            </summary>
            <param name="model">The change password data model</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AccountsController.DeleteUser(System.String)">
            <summary>
            Delete a user's account by user id
            </summary>
            <param name="id">The user id</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.AccountsController.AssignRolesToUser(System.String,System.String[])">
            <summary>
            Assign a set of roles to a user identified by id
            </summary>
            <param name="id">The user's id</param>
            <param name="rolesToAssign">An array of role's names</param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.BlobController">
            <summary>
            The Blob Service stores a blob to varouse object storage storages based on the configuration,
            including local file directory, MinIO storage, or cloud storage. 
            It has set of operations for uploading, downloading, and deleting blob associated with a data instance.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.BlobController.GetBlobs(System.String,System.String,System.String)">
            <summary>
            Get files associated with a data instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of an data instance such as 377382882</param>
            <param name="from">Return attachment infos from the row index such as 0. Default to 0.</param>
            <param name="size">Return attachment infos with a page size such as 20. Default to 20.</param>
            <remarks>Files associated with a data instance are stored in a specified directory by application</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.BlobController.PostBlob(System.String,System.String,System.String)">
            <summary>
            Upload files associated with a data instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of an data instance such as 377382882</param>
            <remarks>The posted files are part of formdata</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.BlobController.DeleteBlob(System.String,System.String,System.String,System.String)">
            <summary>
            Delete a blob associated with a data instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of an data instance such as 377382882</param>
            <param name="blobName">The name of a blob to download</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.BlobController.GetBlob(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Download a blob
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of an data instance such as 377382882</param>
            <param name="blobName">The name of a blob to download</param>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.FullTextSearchController">
            <summary>
            The Full-text search Service is Elasticsearch to perform full-text search and return the search result in JSON
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FullTextSearchController.HasExternalFullTextSearch">
            <summary>
            Get information indicating whether the server uses an external full text search engine (e.g. ElasticSearch) or not
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FullTextSearchController.getRawSearchResult(System.String,System.String)">
            <summary>
            Search the Elastic index created for the given class and given schema and return results
            from Elastic Index as suggestions
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className" > A data class name such as Issues</param>
            <returns>A collection of JObject representing the search result</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FullTextSearchController.getSearchCounts(System.String,System.String)">
            <summary>
            Search the indexes of Elasticsearch created for the classes in a given schema and return a collection of
            json objects with hit count information.
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <returns>A collection of search count info objects in json</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FullTextSearchController.getSearchResult(System.String,System.String)">
            <summary>
            Search the index of Elasticsearch created for the given class and given schema and return the result in a json object
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className" > A data class name such as Issues</param>
            <returns>A json object representing the search result</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FullTextSearchController.getSearchResultCount(System.String,System.String,System.String)">
            <summary>
            Search the index of Elasticsearch created for the given class and given schema and return count of hits
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className" > A data class name such as Issues</param>
            <returns>A integer representing count of the hits</returns>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.DataController">
            <summary>
            The Data Service is a model-driven web service. You can use the APIs of the service to perform CRUD operations
            on any of the classes in your application data model without coding. The service stores the data in a
            relational database, such as SQL Server or Oracle.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.GetMany(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get data instances in a class
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="view">Indicate the data view used for getting data, such as simple, full, or a specific name. Default to simple.</param>
            <param name="from">Indicate the start row index such as 0. Default to 0.</param>
            <param name="size">Indicate a page size such as 20. Default to 20.</param>
            <param name="filter">Getting the data using the filter such as [["Category","contains","bug"],"and",[["Status","=","Closed"],"or",["Status","=","Fixed"]]]. Default to null.</param>
            <param name="sortfield">Indicate the sort field of the data such as StartTime. Default to null</param>
            <param name="sortreverse">Indicate the sort direction such as true or false where true means descending and false means acending. Default to false.</param>
            <returns>A collection of data instance in json</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.GetCount(System.String,System.String,System.String)">
            <summary>
            Gets count of returning data using a filter
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="filter">The filter used to get the data, such as [["Category","contains","bug"],"and",[["Status","=","Closed"],"or",["Status","=","Fixed"]]]. Default to null.</param>
            <returns>The data count</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.GetManyCustom(System.String,System.String,System.String,System.String)">
            <summary>
            Executing a custom API on a set of instances of a class
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="method">A name of a cusotm api such as GetRequestCountByMonth</param>
            <param name="parameters">A parameter expected by the method in form of "name1:value1,name2:value2,name3:value3"</param>
            <returns>The JObject return by the cusotm api</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.GetOneCustom(System.String,System.String,System.String,System.String)">
            <summary>
            Executing a custom api on a given instance of a class
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">the obj_id of an instance such as 2883988822</param>
            <param name="method">A name of a cusotm api such as GetRequestCountByMonth</param>
            <returns>The JObject return by the cusotm api</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.GetOne(System.String,System.String,System.String)">
            <summary>
            Get one instance of a class given the instance id
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">the obj_id of an instance such as 2883988822</param>
            <returns>The instance</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.CloneInstance(System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Clone a data instance and return the cloned instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">the obj_id of an instance to be duplicated such as 2883988822</param>
            <param name="deep">true to deep clone an instance by cloning its related instances following predefined paths; false to shallow clone the instance without cloning its related instances</param>
            <returns>The duplicated instance</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.GetNew(System.String,System.String,System.String,System.String)">
            <summary>
            Get a new instance loaded with initial values
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="template">When getting a new hierarchical instance for a web form, provide a form template name such as RequestForm.htm. Default to null</param>
            <param name="formformat">Indicate the format of the returned instance. True means data in form format and false means in normal format. Default to false</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.GetRelatedMany(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Gets data instances of a class that is related to a data instance in a master class
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A master data class name such as CLTestRequest</param>
            <param name="oid">The obj_id of a data instance in the master class such as 2778388292</param>
            <param name="relatedClassName">The name of a class related to the master class such as ATestItemInstance. The class can be related to the master class through one-to-one, one-to-many, many-to-one, or many-to-many relationhsip, and can be a subclass of a class that has the relationship.</param>
            <param name="view">Return the data using the data view such as simple, full, or a specific name. Default to simple.</param>
            <param name="from">Return the data starting from the row index such as 0. Default to 0.</param>
            <param name="size">Return the data with a page size such as 20. Default to 20.</param>
            <param name="filter">Search the data using the filter such as [["Category","contains","bug"],"and",[["Status","=","Closed"],"or",["Status","=","Fixed"]]]. Default to null.</param>
            <param name="sortfield">Sort returning data by a sort field such as StartTime. Default to null</param>
            <param name="sortreverse">Sort returning datat with the direction such as true or false where true means descending and false means acending. Default to false.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.GetRelatedCount(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets a count of data instances of a class that is related to a data instance in a master class
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A master data class name such as CLTestRequest</param>
            <param name="oid">The obj_id of a data instance in the master class such as 2778388292</param>
            <param name="relatedClassName">The name of a class related to the master class such as ATestItemInstance. The class can be related to the master class through one-to-one, one-to-many, many-to-one, or many-to-many relationhsip, and can be a subclass of a class that has the relationship.</param>
            <param name="filter">Search the data using the filter such as [["Category","contains","bug"],"and",[["Status","=","Closed"],"or",["Status","=","Fixed"]]]. Default to null.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.GetRelatedOne(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets a specific data instance in a class related to a data instance in a master class
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A master data class name such as CLTestRequest</param>
            <param name="oid">The obj_id of a data instance in the master class such as 2778388292</param>
            <param name="relatedClassName">The name of a class related to the master class such as ATestItemInstance. The class can be related to the master class through one-to-one, one-to-many, many-to-one, or many-to-many relationhsip, and can be a subclass of a class that has the relationship.</param>
            <param name="roid">the obj_id of a data instance in the related class</param>
            <param name="view">Return the data using the data view such as simple, full, or a specific name. Default to simple.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.Create(System.String,System.String,System.Object,System.String,System.String,System.String)">
            <summary>
            Add an instance to a class. If the posted instance contains data for the related classes, it creates the related data instances.
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="instance">A json object to be added as data instance</param>
            <param name="template">When posting from a web form, providing a name of the form template such as RequestForm.htm. Default to null</param>
            <param name="validate">If validate is true, it will validate the instance before adding the instance to database and return an error message if there is a validating error. Otherwise, it won't validate the instance. Default value is false.</param>
            <param name="formformat">Indicate if the instance posted is in a form format? The true means data in form format and false means in regular format. Default to true</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.CreateRelated(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a relatiosnhip between a master data instance and a related data instance. The relationship is one of many-to-many or one-to-many between master and related data instances.
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A master data class name such as CLTestRequest</param>
            <param name="oid">The obj_id of a data instance in the master class such as 2778388292</param>
            <param name="rClassName">The name of a class related to the master class such as ATestItemInstance. The class can be related to the master class through one-to-one, one-to-many, many-to-one, or many-to-many relationhsip, and can be a subclass of a class that has the relationship.</param>
            <param name="roid">the obj_id of a data instance in the related class such as 883939992</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.Update(System.String,System.String,System.String,System.Object,System.String,System.String,System.String,System.String)">
            <summary>
            Update an instance in a class, If the posted instance contains data for the related classes, it also updates the related data instances.
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of a data instance to be updated</param>
            <param name="instance">A json object with updated values</param>
            <param name="template">When posting from a web form, providing a name of the form template such as RequestForm.htm. Default to null</param>
            <param name="formAttribute">When posting from a web form, providing a name of the attribute that stores a name of the form template such as InfoForm. Default to null</param>
            <param name="validate">If validate is true, it will validate the instance before updating the instance to database and return an error message if there is a validating error. Otherwise, it won't validate the instance. Default value is false.</param>
            <param name="formformat">Indicate if the instance posted is in a form format? The true means data in form format and false means in regular format. Default to true</param>
            <remarks>The "template" and "formAttribute" parameters are mutually-exclusive. They can be all null or only one should be provided.</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.RefreshNew(System.String,System.String,System.String,System.Object,System.String,System.String)">
            <summary>
            Call the callback function defined for a class on the data instance which doesn't exist in the class.
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="property">The name of a field in a web form invoke this api with its value change</param>
            <param name="instance">The json object to be updated by the callback</param>
            <param name="template">When posting from a web form, providing a name of the form template such as RequestForm.htm. Default to null</param>
            <param name="formAttribute">When posting from a web form, providing a name of the attribute that stores a name of the form template such as InfoForm. Default to null</param>
            <remarks>This api is normally called when a field in a web form is changed. The "template" and "formAttribute" parameters are mutually-exclusive. They can be all null or only one should be provided.</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.RefreshExisting(System.String,System.String,System.String,System.String,System.Object,System.String,System.String)">
            <summary>
            Call the callback function defined for a class on an existing data instance.
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="property">The name of a field in a web form invoke this api with its value change</param>
            <param name="instance">The json object to be updated by the callback</param>
            <param name="template">When posting from a web form, providing a name of the form template such as RequestForm.htm. Default to null</param>
            <param name="formAttribute">When posting from a web form, providing a name of the attribute that stores a name of the form template such as InfoForm. Default to null</param>
            <remarks>This api is normally called when a field in a web form is changed. The "template" and "formAttribute" parameters are mutually-exclusive. They can be all null or only one should be provided.</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.UpdateCustom(System.String,System.String,System.String,System.String)">
            <summary>
            Execute a cusotm API to update an exsting data instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">the obj_id of a data instance in a class</param>
            <param name="instance">The post json object</param>
            <param name="method">A name of a cusotm api such as UpdateOrder</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.CreateCustom(System.String,System.String,System.String)">
            <summary>
            Execute a cusotm API to create a data instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="instance">The post json object for the new instance</param>
            <param name="method">A name of a cusotm api such as UpdateOrder</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.Delete(System.String,System.String,System.String)">
            <summary>
            Delete an instance from a class
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">the obj_id of a data instance to be deleted</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.DeleteRelated(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Delete a relatiosnhip between a master and related instances
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A master data class name such as CLTestRequest</param>
            <param name="oid">The obj_id of a data instance in the master class such as 2778388292</param>
            <param name="rClassName">The name of a class related to the master class such as ATestItemInstance. The class can be related to the master class through one-to-one, one-to-many, many-to-one, or many-to-many relationhsip, and can be a subclass of a class that has the relationship.</param>
            <param name="roid">the obj_id of a data instance in the related class such as 883939992</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.ExtractInstanceData(System.String,System.String,System.String,System.String)">
            <summary>
            Execute a data extraction process for a data instance defined by a xml schema definition.
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A master data class name such as CLTestRequest</param>
            <param name="oid">The obj_id of a data instance in the master class such as 2778388292</param>
            <param name="xmlSchemaName">The name of an xml schema that defines a program of the extraction</param>
            <remarks>This api is used by SmartExcel or other tools to extract data for generating a report</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.GetInstanceView(Newtera.Data.CMConnection,System.String,System.String)">
            <summary>
            Get a InstanceView object
            </summary>
            <param name="connection">DB connection</param>
            <param name="className">Class name of the instance view</param>
            <param name="oid">ObjId of the instance</param>
            <returns>An InstanceView object</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.RunBeforeInsertCode(Newtera.Data.CMConnection,Newtera.Common.MetaData.DataView.InstanceView,System.Object)">
            <summary>
            Run the before insert code on the instance
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.RunBeforeUpdateCode(Newtera.Data.CMConnection,Newtera.Common.MetaData.DataView.InstanceView,System.Object)">
            <summary>
            Run the before update code on the instance
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.RunCallbackCode(Newtera.Data.CMConnection,Newtera.Common.MetaData.DataView.InstanceView,System.String,System.Object)">
            <summary>
            Run the callback code on the instance
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.GetCustomFormDataUsingAttribute(System.String,System.String,System.String,System.String)">
            <summary>
            Gets data for a cusotm form using a template specified by an attribute value of an existing instance
            </summary>
            <param name="schemaName">the schema name</param>
            <param name="className">the class name</param>
            <param name="oid">the instance key</param>
            <param name="formAttributeName">the custom template name</param>
            <returns>A JObject instance</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.GetCustomFormDataUsingFile(System.String,System.String,System.String,System.String)">
            <summary>
            Gets data for a cusotm form using a file-based template for an existing instance
            </summary>
            <param name="schemaName">the schema name</param>
            <param name="className">the class name</param>
            <param name="oid">the instance key</param>
            <param name="templateName">the custom template name</param>
            <returns>A JObject instance</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.UpdateCustomFormDataUsingAttribute(System.String,System.String,System.String,System.String,System.Object,System.Boolean)">
            <summary>
            Update data for a cusotm form using a template specified by an attribute value of an existing instance
            </summary>
            <param name="schemaName">the schema name</param>
            <param name="className">the class name</param>
            <param name="oid">the instance key</param>
            <param name="formAttributeName">the custom template name</param>
            <param name="instance">The instance to be updated</param>
            <param name="needValidate">true to validate the instance first</param>
            <returns>The updated instance in json object</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.RefreshCustomFormDataUsingAttribute(System.String,System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            Refresh data for a cusotm form using a template specified by an attribute value of an existing instance
            </summary>
            <param name="schemaName">the schema name</param>
            <param name="className">the class name</param>
            <param name="oid">the instance key</param>
            <param name="formAttributeName">the custom template name</param>
            <param name="propertyName">The property whose value change invokes callback</param>
            <param name="instance">The instance to be updated</param>
            <returns>The refreshed instance in json object</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.UpdateCustomFormDataUsingFile(System.String,System.String,System.String,System.String,System.Object,System.Boolean)">
            <summary>
            Update a data instance for a cusotm form using a file-based template
            </summary>
            <param name="schemaName">the schema name</param>
            <param name="className">the class name</param>
            <param name="oid">the instance key</param>
            <param name="templateName">the custom template name</param>
            <param name="instance">The instance to be updated</param>
            <param name="needValidate">true to validate the instance first</param>
            <returns>The updated instance in json object</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.RefreshCustomFormDataUsingFile(System.String,System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            REfresh a data instance for a cusotm form using a file-based template
            </summary>
            <param name="schemaName">the schema name</param>
            <param name="className">the class name</param>
            <param name="oid">the instance key</param>
            <param name="templateName">the custom template name</param>
            <param name="propertyName">The property whose value change invokes the callback</param>
            <param name="instance">The instance to be refreshed</param>
            <returns>The refreshed instance in json object</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.DataController.ValidateUsingRules(Newtera.Data.CMConnection,Newtera.Common.MetaData.DataView.DataViewModel,Newtera.Common.MetaData.Rules.RuleCollection,System.String@)">
            <summary>
            Validate the data instance using the validating rules
            </summary>
            <param name="connection">The CMConnection object</param>
            <param name="dataView">The data view that holds an instance data to be validated against.</param>
            <param name="rules">The validating rules.</param>
            <param name="message">The validating message if there is a validating error.</param>
            <returns>true if the data instance is valid, false otherwise.</returns>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.ImportExportController">
            <summary>
            The ImportExport service allows you to import data from files using a canned import process and export a set of data as a data package.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.ImportExportController.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.ImportExportController.GetScripts(System.String,System.String,System.String)">
            <summary>
            Get infos of the import scripts defined for a specific file type and a given class
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="fileType">Indicating the file type that scripts are created for, valid options are All, Excel, Text, or Other. Default to All</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.ImportExportController.ImportFile(System.String,System.String,System.String)">
            <summary>
            Import data from files into a given class using the specified import script
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="script">The name of a script to import a file</param>
            <remarks>The data files are part of formdata</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.ImportExportController.ImportFile(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Import data from files into a class that is related to an data instance of a master class using an import script
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A name of the master data class</param>
            <param name="oid">The obj_id of a master instance</param>
            <param name="relatedClass">The name of a class that is related to the master class via a many-to-one relationship</param>
            <param name="script">The name of a script to import a file. The script is defined for the related class</param>
            <remarks>The data files are part of formdata. The imported data instances will have relationship to the master data instance.</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.ImportExportController.GetDataPackage(System.String,System.String,System.String)">
            <summary>
            Download a data package of an instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A name of the master data class</param>
            <param name="oids">The obj_id of data instances such as 22999222,2882992,23492999, required</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.ImportExportController.ImportDataPackage(System.String,System.String)">
            <summary>
            Import a data package
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A name of the master data class</param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.ImageController">
            <summary>
            The Image Service stores image files that your application needs to display. It has set of operations for reading, uploading, and deleting images.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.ImageController.GetImageInfos(System.String)">
            <summary>
            Get infos of the images stored in a directory
            </summary>
            <param name="subDir">A sub directory of the image directory on server</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.ImageController.PostImages(System.String)">
            <summary>
            Post images to a directory under the system's image directory
            </summary>
            <param name="subDir">A sub directory of the image directory on server</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.ImageController.DeleteImage(System.String,System.String)">
            <summary>
            Delete an image in a directory under the images directory
            </summary>
            <param name="subDir">A sub directory of the image directory on server</param>
            <param name="imageName">The image name</param>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.ReportController">
            <summary>
            You can use the Reporting Service to generate a report using a template and download it in Word or Excel format.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.ReportController.GetReportTemplates(System.String,System.String)">
            <summary>
            Get infos of the report templates defined for a class
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.ReportController.GetReport(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Generate and download a report representing for an instance using a specified (word or excel) template
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of a data instance</param>
            <param name="templateSource">Indicating the source of a report template with options of file or property. Default to null</param>
            <param name="template">When templateSource is file, providing the name of a report template file</param>
            <param name="property">When templateSource is property, providing the name of a property that stores the name of a report template file</param>
            <param name="xmlschema">When generating a pdf report, xmlschema is used to generate xml data</param>
            <remarks>A report is downloaded as a result</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.ReportController.GetReportMultipleInstances(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Generate and download a report representing for a set of data instances using a specified (word or excel) template
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="template">When templateSource is file, providing the name of a report template file</param>
            <param name="oids">The obj_id of data instances such as 22999222,2882992,23492999</param>
            <param name="filter">The filter used to get a set of data instances to generate a report.</param>
            <remarks>This api is used to generate report that compares data from multiple datat instances. A report is downloaded as a result</remarks>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.FileController">
            <summary>
            The Files Service stores files that your application needs to store on a file server. 
            It has set of operations for uploading, downloading, and deleting files associated with a data instance.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FileController.GetAttachments(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get attachment infos associated with a data instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of an data instance such as 377382882</param>
            <param name="from">Return attachment infos from the row index such as 0. Default to 0.</param>
            <param name="size">Return attachment infos with a page size such as 20. Default to 20.</param>
            <remarks>Attachments associated with a data instance are stored in a dedicated directory for attachments. Each attachment has a corresponsing data record in database.</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FileController.AttachmentCount(System.String,System.String,System.String)">
            <summary>
            Get count of attachments associated with a data instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of an data instance such as 377382882</param>
            <returns>count</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FileController.PostAttachment(System.String,System.String,System.String)">
            <summary>
            Upload attachments associated with a data instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of an data instance such as 377382882</param>
            <remarks>The attachment files are part of formdata</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FileController.DeleteAttachment(System.String,System.String,System.String,System.String)">
            <summary>
            Delete an attachment associated with a data instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of an data instance such as 377382882</param>
            <param name="attachmentId">The id of an attachmenet to be deleted</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FileController.GetAttachment(System.String,System.String,System.String,System.String)">
            <summary>
            Download an attachment associated with an instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of an data instance such as 377382882</param>
            <param name="attachmentId">The id of an attachmenet to download</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FileController.GetFiles(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get files associated with a data instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of an data instance such as 377382882</param>
            <param name="from">Return attachment infos from the row index such as 0. Default to 0.</param>
            <param name="size">Return attachment infos with a page size such as 20. Default to 20.</param>
            <param name="dirPath">Indicate the sub directory path (such as dir1%5Cdir2) where the files are located. If null, get files from the base directory</param>
            <remarks>Files associated with a data instance are stored in a specified directory by application</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FileController.FileCount(System.String,System.String,System.String,System.String)">
            <summary>
            Get count of files associated with a data instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of an data instance such as 377382882</param>
            <param name="dirPath">Indicate the sub directory path (such as dir1%5Cdir2) where the files are located. If null, get files from the base directory</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FileController.PostFile(System.String,System.String,System.String,System.String)">
            <summary>
            Upload files associated with a data instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of an data instance such as 377382882</param>
            <param name="dirPath">The subdirectory path such as dir1%5Cdir2</param>
            <remarks>The posted files are part of formdata</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FileController.DeleteFile(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Delete a file associated with a data instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of an data instance such as 377382882</param>
            <param name="fileName">The name of a file to download</param>
            <param name="dirPath">The subdirectory path such as dir1%5Cdir2</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FileController.GetFile(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Download a file associated with a data instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of an data instance such as 377382882</param>
            <param name="fileName">The name of a file to download</param>
            <param name="dirPath">The subdirectory path such as dir1%5Cdir2</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FileController.GetJSONDataFromFile(System.String,System.String,System.String)">
            <summary>
            Get a file content in json format from a file under UserFiles\\{schemaName} directory
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="file">The name of a file such as lineChart.json</param>
            <param name="dirPath">The subdirectory path such as dir1%5Cdir2</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FileController.GetFileDirectory(System.String,System.String,System.String)">
            <summary>
            Get the roots of class trees
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of an data instance such as 377382882</param>
            <returns>A Tree of json object with a tree root</returns>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.SiteMapController">
            <summary>
            The SiteMap Service allows you to develop a framework of your frontend driven by a sitemap model so that users with different roles can have personalized user interface.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.SiteMapController.GetSiteMapSettings">
            <summary>
            Get the basic settings of the site map
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.SiteMapController.GetMenuItems">
            <summary>
            Gets a tree of the menu items personalized for the requesting user
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.SiteMapController.GetClassCommands(System.String,System.String)">
            <summary>
            Get the custom commands defined for a class
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.SiteMapController.GetInstanceCommands(System.String,System.String,System.String)">
            <summary>
            Gets custom commands of a data instance in a class
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="oid">The obj_id of a data instance</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.SiteMapController.GetNodeParameters(System.String)">
            <summary>
            Gets the parameters of a menu item in the sitemap
            </summary>
            <param name="hash">A hashcode identifying the menu item</param>
            <returns>A JSON object with parameter names and values, example {param1:xxx, param2: xxxx, param3: xxxx}</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.SiteMapController.GetNodeHelpDocUrl(System.String)">
            <summary>
            Gets the url of the help document for a menu item in the sitemap
            </summary>
            <param name="hash">A hashcode identifying the menu item</param>
            <returns>A document url string such as myspace,html</returns>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.MetaDataController">
            <summary>
            The Metadata Service has a set of operations of getting metadata in JSON formats. 
            It allows you to develop metadata-driven user interface components that are adaptive and customizable.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataController.GetSchemas">
            <summary>
            Gets infos of the database schemas
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataController.GetClassInfo(System.String,System.String)">
            <summary>
            Gets the basic info of a class
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataController.GetSimpleJSonScehma(System.String,System.String,System.String)">
            <summary>
            Get a string in JSON Schema format representing the metadata of a class
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="view">Return a json schema using the data view such as simple, full, or a specific name. Default to simple.</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataController.GetLeafClasses(System.String,System.String)">
            <summary>
            Get infos of the bottom classes of a data class
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as TestItem</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataController.GetClassTree(System.String)">
            <summary>
            Gets a tree representing the roots classes of a schema
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <returns>A Tree of json object with a tree root</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataController.GetRelationshipTree(System.String,System.String)">
            <summary>
            Get a tree in JSON representing the relationships from a class to its related classes
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A name of the base data class such as TestItem</param>
            <returns>A Tree of json object with a single tree root</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataController.GetTaxonomyTree(System.String,System.String)">
            <summary>
            Gets a tree in JSON representing a taxonomy defined in a schema
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="treeName">A name of the taxonomy defined in the schema such as ProductCatalog</param>
            <returns>A Tree of json object with a tree root</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MetaDataController.BuildJSonScehma(Newtera.Common.MetaData.DataView.DataViewModel)">
            <summary>
            Build a JSON Schema object based on a DataViewModel object
            </summary>
            <param name="dataView">A DataViewModel object</param>
            <returns>A JObject representing a JSON schema</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.RolesController.GetRole(System.String)">
            <summary>
            GetRole
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.RolesController.GetAllRoles">
            <summary>
            GetAllRoles
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.RolesController.Create(Ebaas.WebApi.Models.CreateRoleBindingModel)">
            <summary>
            Create
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.RolesController.DeleteRole(System.String)">
            <summary>
            DeleteRole
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.RolesController.ManageUsersInRole(Ebaas.WebApi.Models.UsersInRoleModel)">
            <summary>
            ManageUsersInRole
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.KanbanController">
            <summary>
            Kanban is Japanese for “visual signal” or “card.” The Kanban’s highly visual nature allowed teams to
            communicate more easily on what work needed to be done and when.
            The Kanban service allows you to build a Kanban user interface component.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.KanbanController.GetData(System.String,System.String)">
            <summary>
            Gets the kanban data for a specified kanban for the requesting user
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="kanbanName">The name of a kanban</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.KanbanController.GetKanbanItems(Newtera.Common.MetaData.DataView.InstanceView,System.String,System.Collections.Generic.List{Ebaas.WebApi.Models.KanbanStateModel},Newtera.Common.MetaData.DataView.InstanceView,System.Xml.XmlDocument)">
            <summary>
            Gets kanban items of a given group and kanban name
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.KanbanController.GetKanbanInstance(System.String)">
            <summary>
            Get a kanban InstanceView object
            </summary>
            <param name="kanbanName">Name of the kanban</param>
            <returns>An InstanceView object</returns>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.MessageController">
            <summary>
            Using the Message Service for sending push notifications to your applications removes the complexity of
            integrating with multiple vendor-specific notification services and gives you an easy to use push portal.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MessageController.GetUserMessages">
            <summary>
            Get messages of the requesting user
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MessageController.GetUserMessageCount">
            <summary>
            Gets count of messages of the requesting user
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MessageController.AddMessage(System.String,Ebaas.WebApi.Models.MessageModel)">
            <summary>
            Post a message to a group
            </summary>
            <param name="groupName">A message group name in form of SchemaName-ClassName-ObjId</param>
            <param name="message">A json object as a message</param>
            <returns>The message id</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MessageController.RemoveMessage(System.String)">
            <summary>
            Delete a message
            </summary>
            <param name="oid">the obj_id of a message</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.MessageController.ClearMessages">
            <summary>
            Clear all messages of the requesting user
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.LogController">
            <summary>
            The Log Service provides the APIs for getting logging information about actions performed on the data.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.LogController.GetPropertyLogs(System.String,System.String,System.String,System.String)">
            <summary>
            Get logging records of updating a property of a class
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A class name such as TestItem</param>
            <param name="oid">An instance id such as 2882992</param>
            <param name="propertyName">A property name such as ProductCode</param>
            <returns>A collection of Log instances</returns>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.TasksController">
            <summary>
            The Tasks Service allows you to manage workflow tasks so that your application can support business processes. 
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.TasksController.GetUserTasks(System.String)">
            <summary>
            Get the tasks created by workflows for the requesting user
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <returns>A collection of TaskInfo objects</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.TasksController.GetUserTasksCount(System.String)">
            <summary>
            Gets the count of the tasks created by the workflows for the requesting user
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <returns>Total count</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.TasksController.GetUserTaskById(System.String,System.String)">
            <summary>
            Get the task of the given id
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="taskId">the task id</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.TasksController.ReassignTask(System.String,System.String,System.String,System.String)">
            <summary>
            Transfer a task from an orignal user to a target user
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="taskId">the task id, such as 22233</param>
            <param name="originalUser">The name of orininal task user such as demo1</param>
            <param name="targetUser">The name of target task user such as demo2</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.TasksController.GetTaskSubstitutionRuleSet(System.String,System.String)">
            <summary>
            Get the rules for transfering tasks to other users defined for a user
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="userName">The name of an user such as demo1</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.TasksController.UpdateTaskSubstitutionRuleSet(System.String,System.String,System.Object)">
            <summary>
            Update the rules for transfering tasks to other users defined for a user
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="userName">The name of an user such as demo1</param>
            <param name="postObj">The task substitute rule set to be updated</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.TasksController.GetFinishedTaskById(System.String,System.String)">
            <summary>
            Get a finished task by a id
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="taskId">the task id</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.TasksController.GetWorkflowFinishedTasks(System.String,System.String)">
            <summary>
            Gets finished tasks for a workflow instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="wfInstanceId">A workflow instance id</param>
            <returns>A collection of TaskInfo objects</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.TasksController.GetUserFinishedTasks(System.String)">
            <summary>
            Gets the finished tasks for the requesting user
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <returns>A collection of TaskInfo objects</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.TasksController.GetUserFinishedTaskCount(System.String)">
            <summary>
            Gets the count of all finished tasks for the requesting user
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <returns>An integer as count</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.TasksController.ClearFinishedTasks(System.String)">
            <summary>
            Clear the finished tasks for the requesting user
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.FormController">
            <summary>
            The Forms Service is a model-driven web service. It supports creating dynamic forms using data model and templates.
            It allows you to offer various forms in your business application without coding.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FormController.GetTemplateForNewInstance(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a form template of a class for creating a new instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="templateSource">Indicating the source of a template with options of file or property. Default to null</param>
            <param name="template">When templateSource is file, providing the name of a form template file</param>
            <param name="readOnly">true to get a read-onlu form template, false otherwise. Deafult to false</param>
            <remarks>If templateSource parameter is null, it returns an auto-generated form template based on meta-data; This api doesn't support it if templateSource is property</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FormController.GetTemplateForExistingInstance(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a form template of a class for updating or viewing an existing data instance
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="templateSource">Indicating the source of a template with options of file or property. Default to null</param>
            <param name="oid">The obj_id of an data instance such as 37728282</param>
            <param name="template">When templateSource is file, providing the name of a form template file</param>
            <param name="property">When templateSource is property, providing the name of a property that stores the name of a form template file</param>
            <param name="readOnly">true to get a read-onlu form template, false otherwise. Deafult to false</param>
            <param name="taskId">the id of a workflow task that contains settings for the form, such as which properties are readonly for the task </param>
            <remarks>If templateSource parameter is null, it returns an auto-generated form template based on meta-data.</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FormController.ValidateFormData(System.String,System.String,System.Object)">
            <summary>
            Validate data in a form with the server-side validating rules
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="instance">A json object representing a form data</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FormController.GetFormTemplateNames(System.String,System.String)">
            <summary>
            Get the names of the form templates defined for a class
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FormController.GetFormLayout(System.String,System.String,System.String)">
            <summary>
            Gets a html string of a form given a form name
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="formName">the name of the form without extension such as MyForm</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FormController.SetFormLayout(System.String,System.String,System.String,System.String)">
            <summary>
            Save a html string as a form template file
            </summary>
            <param name="schemaName">A database schema name such as DEMO</param>
            <param name="className">A data class name such as ATestItemInstance</param>
            <param name="formName">the name of the form without extension such as MyForm</param>
            <param name="content">The html string representing a form</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FormController.GetAutoFormTemplate(System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Get the default form template of a class for an existing instance
            </summary>
            <param name="schemaName">the schema name</param>
            <param name="className">the class name</param>
            <param name="oid">the instance key</param>
            <param name="readOnly">true to get a readonly form, false otherwise</param>
            <param name="taskId">A workflow task id</param>
            <returns>A template in html</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FormController.GetCustomFormFromFile(System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Get a cusotm form template of a given name for updating an instance
            </summary>
            <param name="schemaName">the schema name</param>
            <param name="className">the class name</param>
            <param name="oid">the instance key</param>
            <param name="templateName">the custom template name</param>
            <param name="readOnly">true to get a readonly form, false otherwise</param>
            <param name="taskId">a workflow task id, default to null</param>
            <returns>A custom template in html</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FormController.GetCustomFormFromProperty(System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Get a cusotm form template from a property of an instance
            </summary>
            <param name="schemaName">the schema name</param>
            <param name="className">the class name</param>
            <param name="oid">the instance key</param>
            <param name="propertyName">the property name</param>
            <param name="readOnly">true to get a readonly form, false otherwise</param>
            <param name="taskId">A workflow task id</param>
            <returns>A custom template in html</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FormController.GetPrimaryKey(System.String,System.String,System.String)">
            <summary>
            Get the primary key of an instance
            </summary>
            <param name="schemaName">the schema name</param>
            <param name="className">the class name</param>
            <param name="oid">the instance key</param>
            <returns>A primary key string</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FormController.GetListOptions(System.String,System.String,System.String,System.String)">
            <summary>
            Get the options of a property of a class
            </summary>
            <param name="schemaName">the schema name</param>
            <param name="className">the class name</param>
            <param name="property">the property of a list</param>
            <param name="filterValue">the value that filters the list options</param>
            <returns>A collection of option objects, each object has a name aand value</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.FormController.ValidateUsingRules(Newtera.Data.CMConnection,Newtera.Common.MetaData.DataView.DataViewModel,Newtera.Common.MetaData.Rules.RuleCollection,System.String@)">
            <summary>
            Validate the data instance using the validating rules
            </summary>
            <param name="connection">The CMConnection object</param>
            <param name="dataView">The data view that holds an instance data to be validated against.</param>
            <param name="rules">The validating rules.</param>
            <param name="message">The validating message if there is a validating error.</param>
            <returns>true if the data instance is valid, false otherwise.</returns>
        </member>
        <member name="T:Ebaas.WebApi.Controllers.UserInfoServiceController">
            <summary>
            Represents a service that perform authentication and user info related tasks for admin tools
            </summary>
            <version>  	1.0.0 01 April 2016 </version>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.IsReadOnly">
            <summary>
            Gets the information indicating whether the user information is
            read-only (for example, active directory based)
            </summary>
            <returns>true if it is read-only, false otherwise.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.Authenticate(System.String,System.String)">
            <summary>
            Authenticate an user of given name and password
            </summary>
            <param name="name">User's name.</param>
            <param name="password">User's password</param>
            <returns>true if the user is authenticated, false otherwise.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.GetTypeRoles(System.String,System.String)">
            <summary>
            Gets an array of user's roles of a type.
            </summary>
            <param name="name">User's name.</param>
            <param name="type">Role type</param>
            <returns>An array of user's roles</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.GetRoles(System.String)">
            <summary>
            Gets an array of user's roles of a type.
            </summary>
            <param name="name">User's name.</param>
            <param name="type">Role type</param>
            <returns>An array of user's roles</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.GetUserData(System.String)">
            <summary>
            Gets user data of a given user.
            </summary>
            <param name="userName">The user's name</param>
            <returns>An array of user's data</returns>
            <remarks>
            In the userData array, the first entry is the user's last name,
            the second entry is the user's first name,
            and the third entry is the user's email address
            </remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.GetRoleData(System.String)">
            <summary>
            Gets role data of a given role.
            </summary>
            <param name="name">The role's name</param>
            <returns>An array of role's data</returns>
            <remarks>
            In the roleData array, the first entry is the role's display text,
            the second entry is the user's type
            </remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.GetAllRoles">
            <summary>
            Gets an array of all available roles.
            </summary>
            <returns>An array of all available roles</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.GetUsers(System.String)">
            <summary>
            Gets an array of role's users.
            </summary>
            <param name="role">Role.</param>
            <returns>An array of role's users</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.GetAllUsers">
            <summary>
            Gets an array of all available users.
            </summary>
            <returns>An array of all available users</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.AddUser(System.String,System.String)">
            <summary>
            Add a new user.
            </summary>
            <param name="userName">The user name</param>
            <param name="password">The user password</param>
            <param name="userData">The user's data</param>
            <remarks>
            In the userData array, the first entry is the user's last name,
            the second entry is the user's first name,
            and the third entry is the user's email address
            </remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.ChangeUserPassword(System.String,System.String,System.String)">
            <summary>
            Change a user's password.
            </summary>
            <param name="userName">The user name</param>
            <param name="oldPassword">The old password</param>
            <param name="newPassword">The new password</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.ChangeUserData(System.String)">
            <summary>
            Change an user's data.
            </summary>
            <param name="userName">The user name</param>
            <param name="userData">The user's data</param>
            <remarks>
            In the userData array, the first entry is the user's last name,
            the second entry is the user's first name,
            and the third entry is the user's email address
            </remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.ChangeRoleData(System.String)">
            <summary>
            Change an role's data.
            </summary>
            <param name="roleName">The role name</param>
            <param name="roleData">The role's data</param>
            <remarks>
            In the roleData array, the first entry is the role's display text
            </remarks>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.DeleteUser(System.String)">
            <summary>
            Delete a user.
            </summary>
            <param name="userName">The user name</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.AddRole(System.String)">
            <summary>
            Add a new role
            </summary>
            <param name="roleName">The unique role name</param>
            <param name="roleData">Role's data</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.DeleteRole(System.String)">
            <summary>
            Delete a role.
            </summary>
            <param name="roleName">The role name</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.AddUserRoleMapping(System.String,System.String)">
            <summary>
            Add a mapping between an user and a role.
            </summary>
            <param name="userName">The user name</param>
            <param name="roleName">The role name</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.DeleteUserRoleMapping(System.String,System.String)">
            <summary>
            Delete a mapping between an user and a role.
            </summary>
            <param name="userName">The user name</param>
            <param name="roleName">The role name</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.GetUserEmails(System.String)">
            <summary>
            Get user's emails.
            </summary>
            <param name="userName">The user name</param>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.GetSuperUserName">
            <summary>
            Gets the name of the CM super user.
            </summary>
            <returns>A string represents name of the CM super user</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.AuthenticateSuperUser(System.String,System.String)">
            <summary>
            Authenticate for the super user
            </summary>
            <param name="userName">user name</param>
            <param name="password">password</param>
            <returns>true if it is the super user, false otherwise.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Controllers.UserInfoServiceController.ChangeSuperUserPassword(System.String,System.String,System.String)">
            <summary>
            Change the super user's password.
            </summary>
            <param name="userName">User name</param>
            <param name="oldPassword">Old password</param>
            <param name="newPassword">New password</param>	
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:Ebaas.WebApi.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:Ebaas.WebApi.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:Ebaas.WebApi.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:Ebaas.WebApi.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:Ebaas.WebApi.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ebaas.WebApi.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:Ebaas.WebApi.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:Ebaas.WebApi.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:Ebaas.WebApi.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:Ebaas.WebApi.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:Ebaas.WebApi.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,Ebaas.WebApi.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,Ebaas.WebApi.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:Ebaas.WebApi.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Ebaas.WebApi.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey.#ctor(Ebaas.WebApi.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,Ebaas.WebApi.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:Ebaas.WebApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ebaas.WebApi.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:Ebaas.WebApi.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:Ebaas.WebApi.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ebaas.WebApi.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:Ebaas.WebApi.Hubs.MessageHubMaster">
            <summary>
            The single instance of the MessageHub which can be called anywhere in the server
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Hubs.MessageHubMaster.GlobalContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Hubs.MessageHubMaster.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHubMaster.AddConnectedId(System.String)">
            <summary>
            Add a connected id
            </summary>
            <param name="connectedId"></param>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHubMaster.RemoveConnectedId(System.String)">
            <summary>
            Remove a connected id
            </summary>
            <param name="connectedId"></param>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHubMaster.ExceedConnectionLimit">
            <summary>
            Check if the number of client connection exceeds the limit specified by the license?
            </summary>
            <returns>true if it exceed the limit, false, otherwise</returns>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHubMaster.GetGroupName(System.String,System.String,System.String)">
            <summary>
            Get an unique group name
            </summary>
            <param name="schemaId">schema name plus version number</param>
            <param name="className">class name</param>
            <param name="objId">instance id</param>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHubMaster.SendMessageToGroup(System.String,Newtera.WFModel.MessageInfo)">
            <summary>
            Send a message to a hub group
            </summary>
            <param name="groupName">The group name</param>
            <param name="message">The message to be sent</param>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHubMaster.SendMessageToUsers(System.Collections.Generic.List{System.String},Newtera.WFModel.MessageInfo)">
            <summary>
            Send a message to a list of users
            </summary>
            <param name="userNames">The user names</param>
            <param name="message">The message to be sent</param>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHubMaster.SendTaskNoticeToUser(System.String,Newtera.WFModel.MessageInfo)">
            <summary>
            Send a task notice to an user
            </summary>
            <param name="userName">The user name</param>
            <param name="message">The message to be sent</param>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHubMaster.AddToGroup(System.String,System.String,System.String,System.String)">
            <summary>
            Add a connecting user to a group
            </summary>
            <param name="connectionId"></param>
            <param name="schemaName"></param>
            <param name="userName"></param>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHubMaster.RemoveFromGroup(System.String,System.String,System.String,System.String)">
            <summary>
            Remove a connection user from a group
            </summary>
            <param name="connectionId"></param>
            <param name="schemaName"></param>
            <param name="userName"></param>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHubMaster.GetUserInstanceView(Newtera.Data.CMConnection,System.String,System.String)">
            <summary>
            Get an user InstanceView object
            </summary>
            <param name="connection">DB connection</param>
            <param name="className">Class name of the instance view</param>
            <param name="userName">User's name, unique in the Memebers class</param>
            <returns>An InstanceView object</returns>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHubMaster.GetGroupInstanceView(Newtera.Data.CMConnection,System.String,System.String)">
            <summary>
            Get a group InstanceView object
            </summary>
            <param name="connection">DB connection</param>
            <param name="className">Class name of the instance view</param>
            <param name="groupName">Group's name, unique in the Groups class</param>
            <returns>An InstanceView object</returns>
        </member>
        <member name="T:Ebaas.WebApi.Hubs.MessageHub">
            <summary>
            Message Hub APIs using Microsoft SignalR
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHub.OnConnected">
            <summary>
            Called when an user connects to the server
            </summary>
            <returns>Task</returns>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHub.OnDisconnected(System.Boolean)">
            <summary>
            OnDisconnected
            </summary>
            <param name="stopCalled"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHub.AddToGroup(System.String)">
            <summary>
            AddToGroup
            </summary>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHub.RemoveFromGroup(System.String)">
            <summary>
            RemoveFromGroup
            </summary>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHub.GetUserGroups">
            <summary>
            GetUserGroups
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Hubs.MessageHub.IsUserInGroup(System.String)">
            <summary>
            IsUserInGroup
            </summary>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.CustomPasswordHasher">
            <summary>
            Custom password hasher implementation for Ebaas
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.AttachmentManager">
            <summary>
            Attachmen manager that provides services for get, count, upload, download, and delete attachment(s)
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.AttachmentManager.#ctor">
            <summary>
            Attachmen manager that provides services for get, count, upload, download, and delete attachment(s)
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.AttachmentManager.Get(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Get a list of FileViewModel objects representing the files associated with a data instance
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <param name="start"></param>
            <param name="pageSize"></param>
            <param name="path">subdirectory path</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.AttachmentManager.Count(System.String,System.String,System.String,System.String)">
            <summary>
            Get count of the files associated with a data instance
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <param name="path">subdirectory path</param>
            <returns>The count</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.AttachmentManager.Delete(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Delete a file
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <param name="fileId"></param>
            <param name="path">subdirectory path</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.AttachmentManager.GetFile(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a file
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <param name="fileId"></param>
            <param name="path">subdirectory path</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.AttachmentManager.Add(System.Net.Http.HttpRequestMessage,System.String,System.String,System.String,System.String)">
            <summary>
            Add files as attachments to a data instance
            </summary>
            <param name="request"></param>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <param name="path">subdirectory path</param>
            <returns>Added fileViewNodel objects</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.AttachmentManager.GetJSonData(System.String,System.String,System.String)">
            <summary>
            Get a json object from a file
            </summary>
            <param name="schemaId"></param>
            <param name="file"></param>
            <param name="path">subdirectory path</param>
            <returns>A Json object read from the file</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.AttachmentManager.GetDirectoryTree(System.String,System.String,System.String)">
            <summary>
            Get directory tree for the files associated with an instance
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.AttachmentMultipartFormDataStreamProvider">
            <summary>
            Extending MultipartFormDataStreamProvider to create an unique id for a file saved as an attachment
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.AttachmentMultipartFormDataStreamProvider.GetLocalFileName(System.Net.Http.Headers.HttpContentHeaders)">
            <summary>
            Create an unique id as the file name
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.GetAccessibleClassesVisitor">
            <summary>
            Traverse a site map model and generates a menu items hirarchy in json format for the current user
            </summary>
            <version> 1.0.0 11 Jan 2016 </version>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GetAccessibleClassesVisitor.#ctor(Newtera.Common.MetaData.XaclModel.XaclPolicy,System.String)">
            <summary>
            Instantiate an instance of GetAccessibleClassesVisitor class
            </summary>
            <param name="policy">The access control policy for the menu items</param>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GetAccessibleClassesVisitor.VisitSiteMapModel(Newtera.Common.MetaData.SiteMap.SiteMapModel)">
            <summary>
            Viste a site map model.
            </summary>
            <param name="node">A SiteMapModel instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>
        </member>
        <member name="P:Ebaas.WebApi.Infrastructure.GetAccessibleClassesVisitor.AccessibleClasses">
            <summary>
            Gets the user-specific root menu item
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GetAccessibleClassesVisitor.VisitSiteMap(Newtera.Common.MetaData.SiteMap.SiteMap)">
            <summary>
            Viste a site map.
            </summary>
            <param name="node">A SiteMap instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GetAccessibleClassesVisitor.VisitSideMenu(Newtera.Common.MetaData.SiteMap.SideMenu)">
            <summary>
            Viste a SideMenu.
            </summary>
            <param name="node">A Filter instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GetAccessibleClassesVisitor.VisitSiteMapNode(Newtera.Common.MetaData.SiteMap.SiteMapNode)">
            <summary>
            Viste a site map node.
            </summary>
            <param name="node">A SiteMapNode instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GetAccessibleClassesVisitor.VisitSideMenuGroup(Newtera.Common.MetaData.SiteMap.SideMenuGroup)">
            <summary>
            Viste a SideMenuGroup node.
            </summary>
            <param name="node">A SideMenuGroup instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GetAccessibleClassesVisitor.VisitMenu(Newtera.Common.MetaData.SiteMap.Menu)">
            <summary>
            Viste a menu node.
            </summary>
            <param name="node">A Menu instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GetAccessibleClassesVisitor.VisitMenuItem(Newtera.Common.MetaData.SiteMap.MenuItem)">
            <summary>
            Viste a MenuItem node.
            </summary>
            <param name="node">A MenuItem instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GetAccessibleClassesVisitor.VisitCustomCommandSet(Newtera.Common.MetaData.SiteMap.CustomCommandSet)">
            <summary>
            Viste a CustomCommandSet node.
            </summary>
            <param name="node">A CustomCommandSet instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GetAccessibleClassesVisitor.VisitCustomCommandGroup(Newtera.Common.MetaData.SiteMap.CustomCommandGroup)">
            <summary>
            Viste a CustomCommandGroup node.
            </summary>
            <param name="node">A CustomCommandGroup instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GetAccessibleClassesVisitor.VisitSiteMapModelSet(Newtera.Common.MetaData.SiteMap.SiteMapModelSet)">
            <summary>
            Viste a SiteMapModelSet node.
            </summary>
            <param name="node">A SiteMapModelSet instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GetAccessibleClassesVisitor.VisitCustomCommand(Newtera.Common.MetaData.SiteMap.CustomCommand)">
            <summary>
            Viste a CustomCommand node.
            </summary>
            <param name="node">A CustomCommand instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.BlobStorageUtil">
            <summary>
            Utility class for BlobStorageController
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.ModelFileMultipartFormDataStreamProvider">
            <summary>
            Extending MultipartFormDataStreamProvider to create a name for a model file saved in local disk
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ModelFileMultipartFormDataStreamProvider.GetLocalFileName(System.Net.Http.Headers.HttpContentHeaders)">
            <summary>
            Create an unique id as the file name
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.ImportExportManager">
            <summary>
            Import and Export utility class
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ImportExportManager.GetScripts(System.String,System.String,System.String)">
            <summary>
            Get Import Scripts defined for a class
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="fileType">Indicate the file type that scripts can import, values are All, Excel, Text, Other</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ImportExportManager.ImportFiles(System.Net.Http.HttpRequestMessage,System.String,System.String,System.String)">
            <summary>
            Import data in a file to a class using the script specified
            </summary>
            <param name="request"></param>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="script"></param>
            <returns>Import status</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ImportExportManager.ImportFiles(System.Net.Http.HttpRequestMessage,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Import data in a file to a related class to a master instance using the script specified
            </summary>
            <param name="request">The client request</param>
            <param name="schemaName">The database name</param>
            <param name="className">The master instance class name</param>
            <param name="oid">master instance id</param>
            <param name="relatedClass">The related class name</param>
            <param name="script">The predefined import script name</param>
            <returns>Import status</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ImportExportManager.GetScriptViews(System.String,System.String,System.String)">
            <summary>
            Return a list of ScriptViewModel for the import scripts defined for a class
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ebaas.WebApi.Infrastructure.ImportExportManager.GetManyToOneRelationshipName(Newtera.Common.MetaData.MetaDataModel,Newtera.Common.MetaData.DataView.InstanceView,System.String)" -->
        <member name="M:Ebaas.WebApi.Infrastructure.ImportExportManager.GetInstanceView(Newtera.Data.CMConnection,System.String,System.String)">
            <summary>
            Get a InstanceView object
            </summary>
            <param name="connection">DB connection</param>
            <param name="className">Class name of the instance view</param>
            <param name="oid">ObjId of the instance</param>
            <returns>An InstanceView object</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.IImportExportManager.GetScripts(System.String,System.String,System.String)">
            <summary>
            Get Import Scripts defined for a class
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="fileType">Indicate the file type that scripts can import, values are All, Excel, Text, Other</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.IImportExportManager.ImportFiles(System.Net.Http.HttpRequestMessage,System.String,System.String,System.String)">
            <summary>
            Import data in a file to a class using the script specified
            </summary>
            <param name="request">The client request</param>
            <param name="schemaName">The database name</param>
            <param name="className">The master instance class name</param>
            <param name="script">The predefined import script name</param>
            <returns>Import status</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ebaas.WebApi.Infrastructure.IImportExportManager.ImportFiles(System.Net.Http.HttpRequestMessage,System.String,System.String,System.String,System.String,System.String)" -->
        <member name="T:Ebaas.WebApi.Infrastructure.MLModelManager">
            <summary>
            Model manager that provides services for saving and delete the
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MLModelManager.#ctor">
            <summary>
            File manager that provides services for gettting, uploading, downloading, delete the files in a local disk for data instances
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Infrastructure.MLModelManager.Instance">
            <summary>
            Gets the MLModelManager instance.
            </summary>
            <returns> The MLModelManager instance.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MLModelManager.AddModel(System.Net.Http.HttpRequestMessage,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Save a model file
            </summary>
            <returns>Added fileViewNodel objects</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MLModelManager.AddPreprocess(System.Net.Http.HttpRequestMessage,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Save a preprocess file
            </summary>
            <returns>Added fileViewNodel objects</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MLModelManager.AddPostprocess(System.Net.Http.HttpRequestMessage,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Save a postprocess file
            </summary>
            <returns>Added fileViewNodel objects</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MLModelManager.GetModelInfos(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get an array of model infos that match the criteria
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MLModelManager.DeleteModel(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Delete a model
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MLModelManager.AddModelInfo(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Add model info to a manifest file and create a directory for the model file
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MLModelManager.AddPreprocessInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Add preprocess program info to a manifest file
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MLModelManager.AddPostprocessInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Add postprocess program info to a manifest file
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MLModelManager.DeleteModelInfo(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Delete model info to a manifest file
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.MessageManager">
            <summary>
            Report template manager that provides services for gettting, adding, or delete the report templates in a local disk for data classes
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MessageManager.#ctor">
            <summary>
            Message manager that provides services for posting gettting, adding, and delete the messages.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MessageManager.GetMessages">
            <summary>
            Get a list of MessageModel objects for the calling user
            </summary>
            <returns>A list of ImageInfo objects</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MessageManager.GetMessageCount">
            <summary>
            Get count of MessageModel objects for the calling user
            </summary>
            <returns>An integer</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MessageManager.AddMessage(Ebaas.WebApi.Models.MessageModel)">
            <summary>
            Add a MessageModel object for the calling user
            </summary>
            <param name="message">the message object</param>
            <returns>An integer</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MessageManager.RemoveMessage(System.String)">
            <summary>
            Remove a message of given obj_id
            </summary>
            <param name="oid">the message obj_id</param>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MessageManager.ClearMessages">
            <summary>
            Clear all messages of the calling user
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MessageManager.AddMessage(System.String,Newtera.WFModel.MessageInfo)">
            <summary>
            Create a message in database for an user
            </summary>
            <param name="userName">the receiver of the message</param>
            <param name="messageInfo">MessageInfo object</param>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MessageManager.GetUserMessages">
            <summary>
            Return a list of MessageModel of the calling user
            </summary>
            <returns>List of MessageModel objects</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MessageManager.GetUserMessageCount">
            <summary>
            Return count of MessageModel of the calling user
            </summary>
            <returns>An integer</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MessageManager.CreateMessage(Ebaas.WebApi.Models.MessageModel)">
            <summary>
            Create a message in database for calling user
            </summary>
            <param name="messageModel">json message object</param>
            <returns>Message's obj_id</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MessageManager.CreateMessage(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Create a message in database
            </summary>
            <param name="message">json message object</param>
            <returns>Message's obj_id</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MessageManager.RunBeforeInsertCode(Newtera.Data.CMConnection,Newtera.Common.MetaData.DataView.InstanceView,System.Object)">
            <summary>
            Run the before insert code on the instance
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MessageManager.DeleteMessage(System.String)">
            <summary>
            delete a message in database
            </summary>
            <param name="oid">message's obj_id</param>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.MessageManager.RemoveUserMessages(System.Collections.Generic.List{Ebaas.WebApi.Models.MessageModel})">
            <summary>
            remove an user's messages in database
            </summary>
            <param name="messages">User's messages</param>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.ImageManager">
            <summary>
            Image manager that provides services for gettting, adding, or delete the static images in a local disk of the site
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ImageManager.#ctor">
            <summary>
            File manager that provides services for gettting, uploading, downloading, delete the files in a local disk for data instances
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ImageManager.GetImages(System.String)">
            <summary>
            Get a list of ImageInfo objects representing the images in a given directory
            </summary>
            <param name="imageDir"></param>
            <returns>A list of ImageInfo objects</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ImageManager.AddImages(System.Net.Http.HttpRequestMessage,System.String)">
            <summary>
            Add files  to a data instance
            </summary>
            <param name="request"></param>
            <param name="imageDir"></param>
            <returns>Added fileViewNodel objects</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ImageManager.DeleteImage(System.String,System.String)">
            <summary>
            Add files  to a data instance
            </summary>
            <param name="request"></param>
            <param name="imageDir"></param>
            <returns>Added fileViewNodel objects</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ImageManager.GetImageModels(System.String)">
            <summary>
            Return a list of ImageModel
            </summary>
            <param name="imageDir"></param>
            <returns>List of ImageModel objects</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ImageManager.DeleteImageFile(System.String,System.String)">
            <summary>
            Delete an image file
            </summary>
            <param name="imageDir"></param>
            <param name="imageName"></param>
            <returns>Added fileViewNodel objects</returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.ImageModel">
            <summary>
            Image Model
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.FullTextSearchHelper">
            <summary>
            Query helper for FullTextSearch api
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.ReportTemplateManager">
            <summary>
            Report template manager that provides services for gettting, adding, or delete the report templates in a local disk for data classes
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ReportTemplateManager.#ctor">
            <summary>
            File manager that provides services for gettting, uploading, downloading, delete the files in a local disk for data instances
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ReportTemplateManager.Get(System.String,System.String)">
            <summary>
            Get a list of ReportTemplateModel objects representing the report templates associated with a data class
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ReportTemplateManager.GetFileViews(System.String,System.String)">
            <summary>
            Return a list of FileViewModel for the files associated with an instance
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.ReportGeneratorBase">
            <summary>
            A class that provides services for generating and downloading an excel report
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ReportGeneratorBase.GetInstanceView(Newtera.Data.CMConnection,System.String,System.String)">
            <summary>
            Get a InstanceView object
            </summary>
            <param name="connection">CMConnection</param>
            <param name="className">Class name of the instance view</param>
            <param name="objId">ObjId of the instance</param>
            <returns>An InstanceView object</returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.ReportGenerator">
            <summary>
            A class that provides services for generating and downloading an excel report
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ReportGenerator.GenerateReport(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a file
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="xmlSchemaName"></param>
            <param name="oid"></param>
            <param name="templateFile">Report template file name(*.xlsx, *.doc, *.xsl)</param>
            <param name="templateProperty">The property whose value is a report template name</param>
            <param name="destinationFileName">The file name for the generated report</param>
            <returns>HttpResponseMessage</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.ReportGenerator.GenerateReport(System.String,System.String,System.Collections.Specialized.StringCollection,System.String,System.String)">
            <summary>
            Get a file
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="objIds"></param>
            <param name="templateFile">Report template file name</param>
            <param name="destinationFileName">The file name for the generated report</param>
            <returns>HttpResponseMessage</returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.QueryHelper">
            <summary>
            Query helper for DataController api
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.QueryHelper.SetFilters(Newtera.Common.MetaData.DataView.DataViewModel,System.String,System.Boolean)">
            <summary>
            Set the filter to the dataview
            </summary>
            <param name="dataView"></param>
            <param name="filters"></param>
            <param name="overrideFilter">true to oveeride the existing filter in the dataview, false otherwise.</param>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.QueryHelper.GetSearchText(System.String)">
            <summary>
            Get the search text for Keywords
            </summary>
            <param name="filters"></param>
            <returns>The search text or null</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.QueryHelper.CreateExternalHandler(System.String)">
            <summary>
            Create an instance of the IApiFunction as specified.
            </summary>
            <param name="handlerDefinition">The definition of the custom function</param>
            <returns>An instance of the IApiFunction, null if failed to create the instance.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.QueryHelper.ConvertToObject(System.String,System.String)">
            <summary>
            Convert json or xml string data into corresponding object
            </summary>
            <param name="postData">Data posted</param>
            <param name="mineType">Mine Type</param>
            <returns>Object</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.QueryHelper.GetProperties(System.String)">
            <summary>
            Get key/value pairs from the connectionString and save them in a hashtable
            </summary>
            <param name="connectionString">The connectionString</param>
            <returns>The hashtable</returns>
            <exception cref="T:Newtera.Data.InvalidConnectionStringException">
            Thrown if missing some critical key/value pairs in the connection string.
            </exception>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.FileManagerBase">
            <summary>
            Base class for file manager implementation 
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.FileManagerBase.GetFileViews(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Return a list of FileViewModel for the files associated with an instance
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <param name="start"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.FileManagerBase.GetFileView(System.String,System.String)">
            <summary>
            Return a FileViewModel object for a file
            </summary>
            <param name="schemaName"></param>
            <param name="fileId"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.FileManagerBase.GetFileCount(System.String,System.String,System.String)">
            <summary>
            Return count of the files associated with an instance
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <returns>File count</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.FileManagerBase.DeleteFile(System.String,System.String)">
            <summary>
            Delete a file
            </summary>
            <param name="schemaName">The scehma name</param>
            <param name="fileId"></param>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.FileManagerBase.GetAttachmentInfos(Newtera.Data.CMConnection,System.String,System.Int32,System.Int32,Newtera.Common.Attachment.AttachmentType)">
            <summary>
            Gets attachment info for an instance or a class
            </summary>
            <param name="connection">DB Connection</param>
            <param name="oid">id of the attachment owner, can be instance or class id</param>
            <param name="start">start row</param>
            <param name="pageSize"> page size</param>
            <param name="attachmentType">Instance or Class</param>
            <returns>The List of FileViewModel object</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.FileManagerBase.GetAttachmentInfo(Newtera.Data.CMConnection,Newtera.Common.Attachment.AttachmentType,System.String)">
            <summary>
            Gets a FileViewModel object
            </summary>
            <param name="connection">DB Connection</param>
            <param name="attachmentType">Instance or Class</param>
            <param name="fileId">The file id</param>
            <returns>A FileViewModel object</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.FileManagerBase.GetAttachmentsCount(Newtera.Data.CMConnection,System.String,Newtera.Common.Attachment.AttachmentType)">
            <summary>
            Get attachment count
            </summary>
            <param name="connection">The db connection</param>
            <param name="oid">id of the attachment owner, can be instance or class id</param>
            <param name="attachmentType">Instance or Class</param>
            <returns>attchment count</returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.FileMultipartFormDataStreamProvider">
            <summary>
            Extending MultipartFormDataStreamProvider to create an unique id for a file saved in local disk
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.FileMultipartFormDataStreamProvider.GetLocalFileName(System.Net.Http.Headers.HttpContentHeaders)">
            <summary>
            Get the file name
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.FileTypeInfoManager">
            <summary>
            Represent a singleton that provides File Type Information for attachments.
            </summary>
            <version> 1.0.0	29 Feb 2004</version>
            <author> Yong Zhang </author>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.FileTypeInfoManager.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Infrastructure.FileTypeInfoManager.Instance">
            <summary>
            Gets the FileTypeInfoManager instance.
            </summary>
            <returns> The FileTypeInfoManager instance.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.FileTypeInfoManager.GetFileTypeInfoByName(System.String)">
            <summary>
            Get a FileTypeInfo object based on the suffix of a file name
            </summary>
            <param name="fileName">The file name</param>
            <returns>A FileTypeInfo object that has a suffix being equals to the
            suffix of a provided file name. If it fails to find a matched FileTypeInfo object, the FileTypeInfo
            object for the unknown suffix is returned.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.FileTypeInfoManager.GetFileTypeInfoByType(System.String)">
            <summary>
            Get a FileTypeInfo object based on the file type
            </summary>
            <param name="type">The file type</param>
            <returns>The found FileTypeInfo object. If it fails to find a matched FileTypeInfo object, the FileTypeInfo
            object for the unknown suffix is returned.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.FileTypeInfoManager.GetUnknownFileTypeInfo">
            <summary>
            Gets the FileTypeInfo object defined for the unknown suffix type
            </summary>
            <returns>An FileTypeInfo</returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.LocalFileManager">
            <summary>
            File manager that provides services for gettting, uploading, downloading, delete the files in a local disk for data instances
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.LocalFileManager.#ctor">
            <summary>
            File manager that provides services for gettting, uploading, downloading, delete the files in a local disk for data instances
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.LocalFileManager.Get(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Get a list of FileViewModel objects representing the files associated with a data instance
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <param name="start"></param>
            <param name="pageSize"></param>
            <param name="path">The subdirectory path</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.LocalFileManager.Count(System.String,System.String,System.String,System.String)">
            <summary>
            Get count of the files associated with a data instance
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <returns>The count</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.LocalFileManager.Delete(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Delete a file
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <param name="fileId"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.LocalFileManager.GetFile(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a file
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <param name="fileId"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.LocalFileManager.Add(System.Net.Http.HttpRequestMessage,System.String,System.String,System.String,System.String)">
            <summary>
            Add files  to a data instance
            </summary>
            <param name="request"></param>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <param name="path"></param>
            <returns>Added fileViewNodel objects</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.LocalFileManager.GetJSonData(System.String,System.String,System.String)">
            <summary>
            Get a json object from a file
            </summary>
            <param name="schemaId"></param>
            <param name="file"></param>
            <returns>A Json object read from the file</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.LocalFileManager.GetDirectoryTree(System.String,System.String,System.String)">
            <summary>
            Get directory tree for the files associated with an instance
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.LocalFileManager.GetFileViews(System.String,System.String,System.String,System.String)">
            <summary>
            Return a list of FileViewModel for the files associated with an instance
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.LocalFileManager.GetFileDirectory(System.String,System.String,System.String)">
            <summary>
            Return directory tree for the files associated with an instance
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.LocalFileManager.GetFileCount(System.String,System.String,System.String,System.String)">
            <summary>
            Return count of the files associated with an instance
            </summary>
            <param name="schemaName"></param>
            <param name="className"></param>
            <param name="oid"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.RoleStore`1">
            <summary>
            Class that implements the key ASP.NET Identity role store iterfaces
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.RoleStore`1.#ctor">
            <summary>
            Default constructor that initializes a new MySQLDatabase
            instance using the Default Connection string
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.RoleStore`1.#ctor(Newtera.Common.MetaData.Principal.IUserManager)">
            <summary>
            Constructor that takes a MySQLDatabase as argument 
            </summary>
            <param name="database"></param>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.RoleTable">
            <summary>
            Class that represents the Role table in the MySQL Database
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.RoleTable.#ctor(Newtera.Common.MetaData.Principal.IUserManager)">
            <summary>
            Constructor that takes a IUserManager instance 
            </summary>
            <param name="customUserManager"></param>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.RoleTable.Delete(System.String)">
            <summary>
            Deltes a role from the Roles table
            </summary>
            <param name="roleId">The role Id</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.RoleTable.Insert(Ebaas.WebApi.Infrastructure.ApplicationRole)">
            <summary>
            Inserts a new Role in the Roles table
            </summary>
            <param name="roleName">The role's name</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.RoleTable.GetRoleName(System.String)">
            <summary>
            Returns a role name given the roleId
            </summary>
            <param name="roleId">The role Id</param>
            <returns>Role name</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.RoleTable.GetRoleId(System.String)">
            <summary>
            Returns the role Id given a role name
            </summary>
            <param name="roleName">Role's name</param>
            <returns>Role's Id</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.RoleTable.GetRoleById(System.String)">
            <summary>
            Gets the ApplicationRole given the role Id
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.RoleTable.GetRoleByName(System.String)">
            <summary>
            Gets the ApplicationRole given the role name
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.GenerateMenuItemsVisitor">
            <summary>
            Traverse a site map model and generates a menu items hirarchy in json format for the current user
            </summary>
            <version> 1.0.0 11 Jan 2016 </version>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GenerateMenuItemsVisitor.#ctor(Newtera.Common.MetaData.XaclModel.XaclPolicy)">
            <summary>
            Instantiate an instance of GenerateMenuItemsVisitor class
            </summary>
            <param name="policy">The access control policy for the menu items</param>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GenerateMenuItemsVisitor.VisitSiteMapModel(Newtera.Common.MetaData.SiteMap.SiteMapModel)">
            <summary>
            Viste a site map model.
            </summary>
            <param name="node">A SiteMapModel instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>
        </member>
        <member name="P:Ebaas.WebApi.Infrastructure.GenerateMenuItemsVisitor.RootMenuItem">
            <summary>
            Gets the user-specific root menu item
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GenerateMenuItemsVisitor.VisitSiteMap(Newtera.Common.MetaData.SiteMap.SiteMap)">
            <summary>
            Viste a site map.
            </summary>
            <param name="node">A SiteMap instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GenerateMenuItemsVisitor.VisitSideMenu(Newtera.Common.MetaData.SiteMap.SideMenu)">
            <summary>
            Viste a SideMenu.
            </summary>
            <param name="node">A Filter instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GenerateMenuItemsVisitor.VisitSiteMapNode(Newtera.Common.MetaData.SiteMap.SiteMapNode)">
            <summary>
            Viste a site map node.
            </summary>
            <param name="node">A SiteMapNode instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GenerateMenuItemsVisitor.VisitSideMenuGroup(Newtera.Common.MetaData.SiteMap.SideMenuGroup)">
            <summary>
            Viste a SideMenuGroup node.
            </summary>
            <param name="node">A SideMenuGroup instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GenerateMenuItemsVisitor.VisitMenu(Newtera.Common.MetaData.SiteMap.Menu)">
            <summary>
            Viste a menu node.
            </summary>
            <param name="node">A Menu instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GenerateMenuItemsVisitor.VisitMenuItem(Newtera.Common.MetaData.SiteMap.MenuItem)">
            <summary>
            Viste a MenuItem node.
            </summary>
            <param name="node">A MenuItem instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GenerateMenuItemsVisitor.VisitCustomCommandSet(Newtera.Common.MetaData.SiteMap.CustomCommandSet)">
            <summary>
            Viste a CustomCommandSet node.
            </summary>
            <param name="node">A CustomCommandSet instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GenerateMenuItemsVisitor.VisitCustomCommandGroup(Newtera.Common.MetaData.SiteMap.CustomCommandGroup)">
            <summary>
            Viste a CustomCommandGroup node.
            </summary>
            <param name="node">A CustomCommandGroup instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GenerateMenuItemsVisitor.VisitSiteMapModelSet(Newtera.Common.MetaData.SiteMap.SiteMapModelSet)">
            <summary>
            Viste a SiteMapModelSet node.
            </summary>
            <param name="node">A SiteMapModelSet instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GenerateMenuItemsVisitor.VisitCustomCommand(Newtera.Common.MetaData.SiteMap.CustomCommand)">
            <summary>
            Viste a CustomCommand node.
            </summary>
            <param name="node">A CustomCommand instance</param>
            <returns>true to contibute visiting nested elements, false to stop</returns>		
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.GenerateMenuItemsVisitor.BuildSRef(Newtera.Common.MetaData.SiteMap.SiteMapNode)">
            <summary>
            Build a sref string with necessay parameters for the UI
            </summary>
            <param name="node">The sitemap node</param>
            <returns>A sref string</returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.EbaasNameSpace">
            <summary>
            The EbaasNameSpace class is a centralized place where keywords belong to 
            Ebaas package are defined as constants. Application will refer to the 
            constants rather than directly to the keywords. Therefore, if any changes 
            of keywords in Ebaas name space won't affect the application code.
            </summary>
            <version> 1.0.0 03 Mar 2016 </version>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.EbaasNameSpace.GetAttachmentDir(System.String)">
            <summary>
            Get the directory for storing attachments
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.TreeNodeBuilder">
            <summary> 
            A utility class that builds tree nodes in xml format for TreeView control
            from IE Web Control libary
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.TreeNodeBuilder.#ctor">
            <summary>
            This class provides utilities through static methods. You dont need
            to create an instance of this class.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.TreeNodeBuilder.GetClassTree(Newtera.Common.MetaData.MetaDataModel)">
            <summary>
            Get a JSON tree representing tree structure of class hierarchy
            for a given MetaDataModel
            </summary>
            <param name="metaData">The MetaDataModel that provides class hierarchy info</param>
            <returns>A JSON array. each node in the jarray is a tree root</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.TreeNodeBuilder.GetClassTree(Newtera.Common.MetaData.MetaDataModel,System.String)">
            <summary>
            Get a JSON tree representing tree structure of class hierarchy
            for a given MetaDataModel and, optionally, a given root class.
            </summary>
            <param name="metaData">The MetaDataModel that provides class hierarchy info</param>
            <param name="rootClassName">The name of a root class of the generated tree. If null, the generated tree will includes all classes in the MetaDataModel.</param>
            <returns>A JSON array, each node in the jarray is a tree root</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.TreeNodeBuilder.GetTaxonomyTree(Newtera.Common.MetaData.MetaDataModel,Newtera.Common.MetaData.DataView.Taxonomy.TaxonomyModel)">
            <summary>
            Gets a JSON tree representing a given taxonomy of a schema
            </summary>
            <param name="metaData">The meta data model</param>
            <param name="taxonomy">A Taxonomy model</param>
            <returns>A Tree of json object with a tree root</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.TreeNodeBuilder.GetRelationshipTree(Newtera.Common.MetaData.MetaDataModel,System.String,System.Int32)">
            <summary>
            Get a JSON tree representing relationship tree starting from a base class.
            </summary>
            <param name="metaData">The MetaDataModel that provides class hierarchy info</param>
            <param name="baseClassName">The name of a base class as root of the tree.</param>
            <param name="depth">The depth of relationships that tree builder travels</param>
            <returns>A JObject tree with a single root</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.TreeNodeBuilder.AppendClassChildNodes(Newtera.Common.MetaData.MetaDataModel,Newtonsoft.Json.Linq.JObject,Newtera.Common.MetaData.Schema.SchemaModelElementCollection)">
            <summary>
            Append the child classes as child tree node to the parent
            node.
            </summary>
            <param name="metaData">The MetaDataModel</param>
            <param name="parentNode">The parent json node</param>
            <param name="childClasses">The collection of child classes</param>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.TreeNodeBuilder.CreateClassTreeNode(Newtonsoft.Json.Linq.JObject,Newtera.Common.MetaData.Schema.ClassElement)">
            <summary>
            Create a tree node representing a class
            </summary>
            <param name="parentNode">The parent tree node</param>
            <param name="childClass">The meta data class element</param>
            <returns>A JObject as tree node.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.TreeNodeBuilder.GetCategoryNode(Newtonsoft.Json.Linq.JObject,Newtera.Common.MetaData.Schema.ClassElement)">
            <summary>
            Get a category node under the parent node, if the category node deosn't exist,
            create a category node, add it to the parent node, then return it.
            </summary>
            <param name="parentNode">The parent node</param>
            <param name="classElement">The class element</param>
            <returns>A JObject tree node</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.TreeNodeBuilder.CreateCategoryTreeNode(System.String)">
            <summary>
            Create a tree node representing a category
            </summary>
            <param name="categoryName">The name of category</param>
            <returns>A XmlElement as tree node.</returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.UserClaimsTable">
            <summary>
            Class that represents the UserClaims table in the MySQL Database
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserClaimsTable.FindByUserId(System.String)">
            <summary>
            Returns a ClaimsIdentity instance given a userId
            </summary>
            <param name="userId">The user's id</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserClaimsTable.Delete(System.String)">
            <summary>
            Deletes all claims from a user given a userId
            </summary>
            <param name="userId">The user's id</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserClaimsTable.Insert(System.Security.Claims.Claim,System.String)">
            <summary>
            Inserts a new claim in UserClaims table
            </summary>
            <param name="userClaim">User's claim to be added</param>
            <param name="userId">User's id</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserClaimsTable.Delete(Ebaas.WebApi.Infrastructure.ApplicationUser,System.Security.Claims.Claim)">
            <summary>
            Deletes a claim from a user 
            </summary>
            <param name="user">The user to have a claim deleted</param>
            <param name="claim">A claim to be deleted from user</param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.UserLoginsTable">
            <summary>
            Class that represents the UserLogins table in the MySQL Database
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserLoginsTable.#ctor(Newtera.Common.MetaData.Principal.IUserManager)">
            <summary>
            Constructor that takes a MySQLDatabase instance 
            </summary>
            <param name="database"></param>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserLoginsTable.Delete(Ebaas.WebApi.Infrastructure.ApplicationUser,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>
            Deletes a login from a user in the UserLogins table
            </summary>
            <param name="user">User to have login deleted</param>
            <param name="login">Login to be deleted from user</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserLoginsTable.Delete(System.String)">
            <summary>
            Deletes all Logins from a user in the UserLogins table
            </summary>
            <param name="userId">The user's id</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserLoginsTable.Insert(Ebaas.WebApi.Infrastructure.ApplicationUser,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>
            Inserts a new login in the UserLogins table
            </summary>
            <param name="user">User to have new login added</param>
            <param name="login">Login to be added</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserLoginsTable.FindUserIdByLogin(Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>
            Return a userId given a user's login
            </summary>
            <param name="userLogin">The user's login info</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserLoginsTable.FindByUserId(System.String)">
            <summary>
            Returns a list of user's logins
            </summary>
            <param name="userId">The user's id</param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.UserRolesTable">
            <summary>
            Class that represents the UserRoles table in the MySQL Database
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserRolesTable.FindByUserId(System.String)">
            <summary>
            Returns a list of user's roles
            </summary>
            <param name="userId">The user's id</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserRolesTable.Delete(System.String)">
            <summary>
            Deletes all roles from a user in the UserRoles table
            </summary>
            <param name="userId">The user's id</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserRolesTable.DeleteRole(System.String,System.String)">
            <summary>
            Deletes a role from a user in the UserRoles table
            </summary>
            <param name="userId">The user's id</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserRolesTable.Insert(Ebaas.WebApi.Infrastructure.ApplicationUser,System.String)">
            <summary>
            Inserts a new role for a user in the UserRoles table
            </summary>
            <param name="user">The User</param>
            <param name="roleId">The Role's id</param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.UserStore`1">
            <summary>
            Class that implements the key ASP.NET Identity user store iterfaces
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.#ctor">
            <summary>
            Default constructor that initializes a new ServerSideUserManager
            instance using the Default Connection string
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.#ctor(Newtera.Common.MetaData.Principal.IUserManager)">
            <summary>
            Constructor that takes a MySQLDatabase as argument 
            </summary>
            <param name="database"></param>
        </member>
        <member name="P:Ebaas.WebApi.Infrastructure.UserStore`1.Users">
            <summary>
            Get all users
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.CreateAsync(`0)">
            <summary>
            Insert a new TUser in the UserTable
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.FindByIdAsync(System.String)">
            <summary>
            Returns an TUser instance based on a userId query 
            </summary>
            <param name="userId">The user's Id</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.FindByNameAsync(System.String)">
            <summary>
            Returns an TUser instance based on a userName query 
            </summary>
            <param name="userName">The user's name</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.UpdateAsync(`0)">
            <summary>
            Updates the UsersTable with the TUser instance values
            </summary>
            <param name="user">TUser to be updated</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.AddClaimAsync(`0,System.Security.Claims.Claim)">
            <summary>
            Inserts a claim to the UserClaimsTable for the given user
            </summary>
            <param name="user">User to have claim added</param>
            <param name="claim">Claim to be added</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.GetClaimsAsync(`0)">
            <summary>
            Returns all claims for a given user
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)">
            <summary>
            Removes a claim froma user
            </summary>
            <param name="user">User to have claim removed</param>
            <param name="claim">Claim to be removed</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.AddLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>
            Inserts a Login in the UserLoginsTable for a given User
            </summary>
            <param name="user">User to have login added</param>
            <param name="login">Login to be added</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.FindAsync(System.String,System.String)">
            <summary>
            Returns an TUser based on the userName and password
            </summary>
            <param name="userName">The user name</param>
            <param name="password">The password</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>
            Returns an TUser based on the Login info
            </summary>
            <param name="login"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.GetLoginsAsync(`0)">
            <summary>
            Returns list of UserLoginInfo for a given TUser
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.RemoveLoginAsync(`0,Microsoft.AspNet.Identity.UserLoginInfo)">
            <summary>
            Deletes a login from UserLoginsTable for a given TUser
            </summary>
            <param name="user">User to have login removed</param>
            <param name="login">Login to be removed</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.AddToRoleAsync(`0,System.String)">
            <summary>
            Inserts a entry in the UserRoles table
            </summary>
            <param name="user">User to have role added</param>
            <param name="roleName">Name of the role to be added to user</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.GetRolesAsync(`0)">
            <summary>
            Returns the roles for a given TUser
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.IsInRoleAsync(`0,System.String)">
            <summary>
            Verifies if a user is in a role
            </summary>
            <param name="user"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.RemoveFromRoleAsync(`0,System.String)">
            <summary>
            Removes a user from a role
            </summary>
            <param name="user"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.DeleteAsync(`0)">
            <summary>
            Deletes a user
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.GetPasswordHashAsync(`0)">
            <summary>
            Returns the PasswordHash for a given TUser
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.HasPasswordAsync(`0)">
            <summary>
            Verifies if user has password
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.SetPasswordHashAsync(`0,System.String)">
            <summary>
            Sets the password hash for a given TUser
            </summary>
            <param name="user"></param>
            <param name="passwordHash"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.SetSecurityStampAsync(`0,System.String)">
            <summary>
             Set security stamp
            </summary>
            <param name="user"></param>
            <param name="stamp"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.GetSecurityStampAsync(`0)">
            <summary>
            Get security stamp
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.SetEmailAsync(`0,System.String)">
            <summary>
            Set email on user
            </summary>
            <param name="user"></param>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.GetEmailAsync(`0)">
            <summary>
            Get email from user
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.GetEmailConfirmedAsync(`0)">
            <summary>
            Get if user email is confirmed
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.SetEmailConfirmedAsync(`0,System.Boolean)">
            <summary>
            Set when user email is confirmed
            </summary>
            <param name="user"></param>
            <param name="confirmed"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.FindByEmailAsync(System.String)">
            <summary>
            Get user by email
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.SetPhoneNumberAsync(`0,System.String)">
            <summary>
            Set user phone number
            </summary>
            <param name="user"></param>
            <param name="phoneNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.GetPhoneNumberAsync(`0)">
            <summary>
            Get user phone number
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.GetPhoneNumberConfirmedAsync(`0)">
            <summary>
            Get if user phone number is confirmed
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.SetPhoneNumberConfirmedAsync(`0,System.Boolean)">
            <summary>
            Set phone number if confirmed
            </summary>
            <param name="user"></param>
            <param name="confirmed"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.SetTwoFactorEnabledAsync(`0,System.Boolean)">
            <summary>
            Set two factor authentication is enabled on the user
            </summary>
            <param name="user"></param>
            <param name="enabled"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.GetTwoFactorEnabledAsync(`0)">
            <summary>
            Get if two factor authentication is enabled on the user
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.GetLockoutEndDateAsync(`0)">
            <summary>
            Get user lock out end date
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.SetLockoutEndDateAsync(`0,System.DateTimeOffset)">
            <summary>
            Set user lockout end date
            </summary>
            <param name="user"></param>
            <param name="lockoutEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.IncrementAccessFailedCountAsync(`0)">
            <summary>
            Increment failed access count
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.ResetAccessFailedCountAsync(`0)">
            <summary>
            Reset failed access count
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.GetAccessFailedCountAsync(`0)">
            <summary>
            Get failed access count
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.GetLockoutEnabledAsync(`0)">
            <summary>
            Get if lockout is enabled for the user
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserStore`1.SetLockoutEnabledAsync(`0,System.Boolean)">
            <summary>
            Set lockout enabled for user
            </summary>
            <param name="user"></param>
            <param name="enabled"></param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.UserTable`1">
            <summary>
            Class that represents the Users table in the Ebaas database
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserTable`1.GetUserById(System.String)">
            <summary>
            Returns a list of TUser instances given a user name
            </summary>
            <param name="userId">User's id</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserTable`1.GetUsers">
            <summary>
            Returns a list of TUser instances in database
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserTable`1.GetUserByName(System.String)">
            <summary>
            Returns a list of TUser instances given a user name
            </summary>
            <param name="userName">User's name</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserTable`1.GetPasswordHash(System.String)">
            <summary>
            Return the user's password hash
            </summary>
            <param name="userId">The user's id</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserTable`1.SetPasswordHash(System.String,System.String)">
            <summary>
            Sets the user's password hash
            </summary>
            <param name="userId"></param>
            <param name="passwordHash"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserTable`1.GetSecurityStamp(System.String)">
            <summary>
            Returns the user's security stamp
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserTable`1.Insert(`0)">
            <summary>
            Inserts a new user in the Users table
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserTable`1.Delete(System.String)">
            <summary>
            Deletes a user from the Users table
            </summary>
            <param name="userName">The user's id</param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserTable`1.Delete(`0)">
            <summary>
            Deletes a user from the Users table
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.UserTable`1.Update(`0)">
            <summary>
            Updates a user in the Users table
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="T:Ebaas.WebApi.Infrastructure.WebServiceHandler">
            <summary> 
            This class represents a handler that serves as a helper to
            AttachmentWebService.
            </summary>
            <version> 1.0.0 08 Jan 2004 </version>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.WebServiceHandler.#ctor">
            <summary>
            Initiate an instance of WebServiceHandler class
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.WebServiceHandler.#ctor(Newtera.Data.CMConnection)">
            <summary>
            Initiate an instance of WebServiceHandler class
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.WebServiceHandler.AddAttachmentInfo(Newtera.Common.Attachment.AttachmentType,System.String,System.String,System.String,System.String,System.Int64,System.Boolean)">
            <summary>
            Add an attachment info for an item
            </summary>
            <param name="attachmentType">One of the AttachmentType enum values</param>
            <param name="itemId">The id of attaching item, class or instance.</param>
            <param name="className">The name of instance's class</param>
            <param name="name">The name of an attachment.</param>
            <param name="type">The attachment type</param>
            <param name="size">The size of an attachment</param>
            <param name="isPublic">Indicate whether the attachment is public or not.</param>
            <returns>A unique id for the attachment</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.WebServiceHandler.AddAttachmentInfo(Newtera.Common.Attachment.AttachmentType,System.String,System.String,System.String,System.String,System.String,System.Int64,System.Boolean)">
            <summary>
            Add an attachment info for an attachment which will be attached to a specified instance
            </summary>
            <param name="attachmentType">One of the AttachmentType enum values</param>
            <param name="itemId">The id of attaching item.</param>
            <param name="attachmentId">The unique attachment id</param>
            <param name="className">The name of instance's class</param>
            <param name="name">The name of an attachment.</param>
            <param name="type">The attachment type</param>
            <param name="size">The size of an attachment</param>
            <param name="isPublic">Is public</param>
            <returns>A unique id for the attachment</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.WebServiceHandler.SetAttachment(Newtera.Common.Attachment.AttachmentType,System.String)">
            <summary>
            Set an attachment which is contained in RequestContext
            </summary>
            <param name="attachmentType">One of the AttachmentType enum values.</param>
            <param name="attachmentId">The attachment id</param>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.WebServiceHandler.DeleteAttachment(Newtera.Common.Attachment.AttachmentType,System.String,System.String)">
            <summary>
            Delete an attachment from a specified item
            </summary>
            <param name="attachmentType">One of the AttachmentType enum values.</param>
            <param name="itemId">The id of attaching item.</param>
            <param name="name">The name of an attachment to be deleted.</param>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.WebServiceHandler.GetAttachment(Newtera.Common.Attachment.AttachmentType,System.String,System.String)">
            <summary>
            Get an attachment of a specified item.
            </summary>
            <param name="attachmentType">One of the AttachmentType enum values.</param>
            <param name="itemId">The id of specified item.</param>
            <param name="name">The name of attachment to obtain.</param>
            <remarks>
            The attachment is sent back to a client through ResponseContext
            </remarks>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.WebServiceHandler.GetAttachmentInfosCount(Newtera.Common.Attachment.AttachmentType,System.String)">
            <summary>
            Gets count of all attachments of a specified instance.
            </summary>
            <param name="attachmentType">One of AttachmentType enum values.</param>
            <param name="itemId">The id of specified item.</param>
            <returns>Count of all attachments of an instance.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.WebServiceHandler.GetAttachmentInfos(Newtera.Common.Attachment.AttachmentType,System.String,System.Int32,System.Int32)">
            <summary>
            Gets information of all attachments of a specified instance.
            </summary>
            <param name="attachmentType">One of AttachmentType enum values.</param>
            <param name="itemId">The id of specified item.</param>
            <param name="startRow">The start row</param>
            <param name="pageSize">The page size</param>
            <returns>An xml string representing information of all attachments of an instance.</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.WebServiceHandler.GetFileTypeInfo">
            <summary>
            Get an attachment of a specified instance.
            </summary>
            <remarks>
            The icon images are returned though DIME records
            </remarks>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.WebServiceHandler.GetChartFile(System.String,System.String,System.String)">
            <summary>
            Get a chart file
            </summary>
            <param name="connectionStr">The connection string indicating the schema to connect to</param>
            <param name="formatName">The format name of the graph file.</param>
            <param name="chartId">The id of the saved chart.</param>
            <remarks>
            The file is sent back to a client through ResponseContext
            </remarks>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.WebServiceHandler.CleanupSchema(System.String,System.String)">
            <summary>
            Called after a schema is deleted
            </summary>
            <param name="schemaName">The schema name</param>
            <param name="version">The schema version</param>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.WebServiceHandler.UpdateImageAttributeValue(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Update the value of an image attribute for an data instance
            </summary>
            <param name="instanceId">The id of an instance to which to add the attachment.</param>
            <param name="attributeName">The name of image attribute.</param>
            <param name="className">The name of class that the instance belongs to.</param>
            <param name="imageFilePath">The path of the uploaded image.</param>
            <param name="type">The type of an attachment.</param>
            <returns>An unique string representing the image name</returns>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.WebServiceHandler.GetImage(System.String)">
            <summary>
            Get an image of a specified id.
            </summary>
            <param name="imageId">The id of specified image.</param>
            <remarks>
            The image is sent back to a client through ResponseContext
            </remarks>
        </member>
        <member name="M:Ebaas.WebApi.Infrastructure.WebServiceHandler.DeleteImage(System.String,System.String,System.String,System.String)">
            <summary>
            Delete an image and clear value of corresponding image column.
            </summary>
            <param name="instanceId">The id of an instance to which to add the attachment.</param>
            <param name="attributeName">The name of image attribute.</param>
            <param name="className">The name of class that the instance belongs to.</param>
            <param name="imageId">The image image.</param>
        </member>
        <member name="T:Ebaas.WebApi.Models.IApiFunction">
            <summary>
            Represents an interface for an api
            </summary>
            <version> 1.0.0 4 Nov 2015 </version>
        </member>
        <member name="M:Ebaas.WebApi.Models.IApiFunction.Execute(Ebaas.WebApi.Models.ApiExecutionContext)">
            <summary>
            Execute an api function
            </summary>
            <param name="context">The api execution context</param>
            <returns>A string return from api function</returns>
        </member>
        <member name="T:Ebaas.WebApi.Models.ApiExecutionContext">
            <summary>
            Execution context for external api execute method
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Models.ApiExecutionContext.DataView">
            <summary>
            Get or set the dataview model
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Models.ApiExecutionContext.SchemaId">
            <summary>
            Database schema id
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Models.ApiExecutionContext.ClassName">
            <summary>
            Database class name
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Models.ApiExecutionContext.ObjID">
            <summary>
            Obj_id of the instance, optional
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Models.ApiExecutionContext.InstanceData">
            <summary>
            The instance data for update or create method, optional
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Models.ApiExecutionContext.Parameters">
            <summary>
            The parameters of the method
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Models.ApiExecutionContext.Connection">
            <summary>
            Database connection
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Models.ApiExecutionContext.ContentType">
            <summary>
            The type of the instanceData, for example, application/json (default) or application/xml
            </summary>
        </member>
        <member name="P:Ebaas.WebApi.Models.ApiExecutionContext.AcceptType">
            <summary>
            The type of the returned data, for example, application/json (default) or application/xml
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Models.KanbanStateModel">
            <summary>
            Kanban State model
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Models.KanbanGroupModel">
            <summary>
            Kanban Group model
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Models.KanbanItemModel">
            <summary>
            Kanban Item model
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Utils.AttachmentLoader">
            <summary>
            Upload attachment files onto the database.
            </summary>
            <version> 1.0.0 11 Jan 2013 </version>
        </member>
        <member name="M:Ebaas.WebApi.Utils.AttachmentLoader.#ctor(Newtera.Data.CMConnection,Newtera.Common.MetaData.MetaDataModel,System.String,System.Collections.Hashtable)">
            <summary>
            Instantiate an instance of AttachmentLoader class
            </summary>
            <param name="metaData">The Meta Data Model</param>
            <param name="attachmentDir">The directory where the attachment files reside.</param>
            <param name="objIdMappings">The mapping that translates an old obj_id into a new obj_id.</param>
        </member>
        <member name="M:Ebaas.WebApi.Utils.AttachmentLoader.LoadInstanceAttachments">
            <summary>
            Upload instance attachments onto the database.
            </summary>
            <remarks>The obj_ids contained in attachment.xml file represents the
            obj_ids in the backup database. since the instances are recreated in the
            new database, the obj_ids of the newly created instances are changed.
            therefore, we need to use the obj_id mappings to find the new obj_id
            using the old obj_id.</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Utils.AttachmentLoader.LoadImages">
            <summary>
            Upload instance images onto the database.
            </summary>
            <remarks>The obj_ids contained in image file names represents the
            obj_ids in the backup database. since the instances are recreated in the
            new database, the obj_ids of the newly created instances are changed.
            therefore, we need to use the obj_id mappings to replace the old obj_id with the new one.</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Utils.AttachmentLoader.AddAttachmentInfo(Newtera.Common.Attachment.AttachmentType,System.String,System.String,System.String,System.String,System.Int64,System.Boolean)">
            <summary>
            Add an attachment info for an attachment which will be attached to a specified instance
            </summary>
            <param name="attachmentType">One of the AttachmentType enum values</param>
            <param name="itemId">The id of attaching item.</param>
            <param name="attachmentId">The unique attachment id</param>
            <param name="className">The name of instance's class</param>
            <param name="name">The name of an attachment.</param>
            <param name="type">The attachment type</param>
            <param name="size">The size of an attachment</param>
            <param name="isPublic">Is public</param>
            <returns>A unique id for the attachment</returns>
        </member>
        <member name="M:Ebaas.WebApi.Utils.AttachmentLoader.GetAttachmentInfo(Newtera.Common.Attachment.AttachmentType,System.String)">
            <summary>
            Get an attachment info given an attachement id
            </summary>
            <param name="attachmentType">One of the AttachmentType enum values</param>
            <param name="attachmentId">The unique attachment id</param>
            <returns>A attachment info object</returns>
        </member>
        <member name="M:Ebaas.WebApi.Utils.AttachmentLoader.DeleteImage(System.String,System.String,System.String,System.String)">
            <summary>
            Delete an image and clear value of corresponding image column.
            </summary>
            <param name="instanceId">The id of an instance to which to add the attachment.</param>
            <param name="attributeName">The name of image attribute.</param>
            <param name="className">The name of class that the instance belongs to.</param>
            <param name="imageId">The image image.</param>
        </member>
        <member name="M:Ebaas.WebApi.Utils.AttachmentLoader.GetMIMEType(System.String)">
            <summary>
            Gets the type of a file based on its suffix
            </summary>
            <param name="fileName">The file name</param>
            <returns>A string represents a type</returns>
        </member>
        <member name="T:Ebaas.WebApi.Utils.CleanupSchemaVisitor">
            <summary>
            Traverse the schema model and cleanup the schema model to have a fresh start.
            </summary>
            <version> 1.0.0 11 Jan 2013 </version>
        </member>
        <member name="M:Ebaas.WebApi.Utils.CleanupSchemaVisitor.#ctor">
            <summary>
            Instantiate an instance of CleanupSchemaVisitor class
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.CleanupSchemaVisitor.VisitClassElement(Newtera.Common.MetaData.Schema.ClassElement)">
            <summary>
            Viste a class element.
            </summary>
            <param name="element">A ClassElement instance</param>
        </member>
        <member name="M:Ebaas.WebApi.Utils.CleanupSchemaVisitor.VisitSimpleAttributeElement(Newtera.Common.MetaData.Schema.SimpleAttributeElement)">
            <summary>
            Viste a simple attribute element.
            </summary>
            <param name="element">A SimpleAttributeElement instance</param>
        </member>
        <member name="M:Ebaas.WebApi.Utils.CleanupSchemaVisitor.VisitRelationshipAttributeElement(Newtera.Common.MetaData.Schema.RelationshipAttributeElement)">
            <summary>
            Viste a relationship attribute element.
            </summary>
            <param name="element">A RelationshipAttributeElement instance</param>
        </member>
        <member name="M:Ebaas.WebApi.Utils.CleanupSchemaVisitor.VisitArrayAttributeElement(Newtera.Common.MetaData.Schema.ArrayAttributeElement)">
            <summary>
            Viste an array attribute element.
            </summary>
            <param name="element">A ArrayAttributeElement instance</param>
        </member>
        <member name="M:Ebaas.WebApi.Utils.CleanupSchemaVisitor.VisitVirtualAttributeElement(Newtera.Common.MetaData.Schema.VirtualAttributeElement)">
            <summary>
            Viste a virtual attribute element.
            </summary>
            <param name="element">A VirtualAttributeElement instance</param>
        </member>
        <member name="M:Ebaas.WebApi.Utils.CleanupSchemaVisitor.VisitImageAttributeElement(Newtera.Common.MetaData.Schema.ImageAttributeElement)">
            <summary>
            Viste an image attribute element.
            </summary>
            <param name="element">A ImageAttributeElement instance</param>
        </member>
        <member name="M:Ebaas.WebApi.Utils.CleanupSchemaVisitor.VisitCustomPageElement(Newtera.Common.MetaData.Schema.CustomPageElement)">
            <summary>
            Viste an custom page element.
            </summary>
            <param name="element">A CustomPageElement instance</param>
        </member>
        <member name="M:Ebaas.WebApi.Utils.CleanupSchemaVisitor.VisitSchemaInfoElement(Newtera.Common.MetaData.Schema.SchemaInfoElement)">
            <summary>
            Viste a schema info element.
            </summary>
            <param name="element">A SchemaInfoElement instance</param>
        </member>
        <member name="M:Ebaas.WebApi.Utils.CleanupSchemaVisitor.VisitEnumElement(Newtera.Common.MetaData.Schema.EnumElement)">
            <summary>
            Viste an enum constraint element.
            </summary>
            <param name="element">A EnumElement instance</param>
        </member>
        <member name="M:Ebaas.WebApi.Utils.CleanupSchemaVisitor.VisitRangeElement(Newtera.Common.MetaData.Schema.RangeElement)">
            <summary>
            Viste a range constraint element.
            </summary>
            <param name="element">A RangeElement instance</param>
        </member>
        <member name="M:Ebaas.WebApi.Utils.CleanupSchemaVisitor.VisitPatternElement(Newtera.Common.MetaData.Schema.PatternElement)">
            <summary>
            Viste a pattern constraint element.
            </summary>
            <param name="element">A PatternElement instance</param>
        </member>
        <member name="M:Ebaas.WebApi.Utils.CleanupSchemaVisitor.VisitListElement(Newtera.Common.MetaData.Schema.ListElement)">
            <summary>
            Viste a list constraint element.
            </summary>
            <param name="element">A ListElement instance</param>
        </member>
        <member name="T:Ebaas.WebApi.Utils.InstanceLoader">
            <summary>
            Load instances from class data files into the database.
            It takes two phases to load instances. The phase one, insert
            instances without worrying about relationships between instances.
            Phase two, updating the inserted instances with relationships.
            </summary>
            <version> 1.0.0 11 Jan 2013 </version>
        </member>
        <member name="M:Ebaas.WebApi.Utils.InstanceLoader.#ctor(Newtera.Data.CMConnection,Newtera.Common.MetaData.MetaDataModel,System.String,System.Boolean)">
            <summary>
            Instantiate an instance of InstanceLoader class
            </summary>
            <param name="metaData">The Meta Data Model</param>
            <param name="classDataDir">The directory where the class data files reside.</param>
        </member>
        <member name="P:Ebaas.WebApi.Utils.InstanceLoader.ObjIdMappings">
            <summary>
            Gets the mapping table that maps an old obj_id to a new obj_id
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.InstanceLoader.LoadInstances">
            <summary>
            Load instances from class data files into the database
            </summary>
            <remarks>It takes two phases to load instances. The phase one, insert
            instances without worrying about relationships between instances.
            Loading instances is the phase one.</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Utils.InstanceLoader.UpdateRelationships">
            <summary>
            Updating the relationships among the previously loaded instances in the
            database.
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.InstanceLoader.GetUpdateRelationshipsQuery(Newtera.Common.MetaData.DataView.InstanceView)">
            <summary>
            Generate a query that updates values of relationship attributes of
            an instance.
            </summary>
            <param name="instanceView">The InstanceView object</param>
            <returns>The update query string.</returns>
        </member>
        <member name="T:Ebaas.WebApi.Utils.PackDataPackageUtil">
            <summary>
            Utility to create a datapackage
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.PackDataPackageUtil.CreateDataPackage">
            <summary>
            Create a data pack file containing data of the master instance and its asscoaited instances
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Utils.PackDataPackageUtil.WriteMetaData(Newtera.Data.CMConnection)">
            <summary>
            Write the meta data files
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.PackDataPackageUtil.WiteDataPackage(Newtera.Data.CMConnection)">
            <summary>
            Write the xml data of the selected data instances in the specified classes into files
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.PackDataPackageUtil.WriteMasterInstanceData(Newtera.Data.CMConnection)">
            <summary>
            Write the master instance data to a file
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Ebaas.WebApi.Utils.PackDataPackageUtil.WriteRelatedInstanceData(Newtera.Data.CMConnection,Newtera.Common.MetaData.DataView.InstanceView)">
            <summary>
            Write the instance data in the related classes that are owned by the master instance
            </summary>
            <remarks>This is called recursively</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Utils.PackDataPackageUtil.GetRelatedClasses(Newtera.Data.CMConnection,Newtera.Common.MetaData.DataView.DataClass)">
            <summary>
            Get a collection of the DataClass objects that represents the data classes that are
            linked to a base data class through the relationship attributes
            </summary>
            <remarks>Unlike the default behaviouse, for many-to-many relationship, this method will return the junction class as a related class, instead of the class on the another side of junction class.</remarks>
        </member>
        <member name="M:Ebaas.WebApi.Utils.PackDataPackageUtil.SaveRelatedInstancesToFile(Newtera.Data.CMConnection,Newtera.Common.MetaData.DataView.DataClass,Newtera.Common.MetaData.DataView.InstanceView,System.Int32@)">
            <summary>
            Get the related instance data from DB and save it to a file
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Utils.PackDataPackageUtil.WriteInstanceData(Newtera.Data.CMConnection,Newtera.Common.MetaData.DataView.DataViewModel,System.String)">
            <summary>
            Write the instances retrieved by the given query to a file
            </summary>
            <param name="dataView"></param>
            <param name="query"></param>
        </member>
        <member name="M:Ebaas.WebApi.Utils.PackDataPackageUtil.WriteImageFiles(Newtera.Data.CMConnection)">
            <summary>
            Write image files
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.PackDataPackageUtil.WriteInstanceAttachments(Newtera.Data.CMConnection)">
            <summary>
            Write instances attachments to files
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.PackDataPackageUtil.WriteFormTemplates(Newtera.Data.CMConnection)">
            <summary>
            Write form template files
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.PackDataPackageUtil.WriteReportTemplates(Newtera.Data.CMConnection)">
            <summary>
            Write report template files
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.PackDataPackageUtil.PackFiles(System.String,System.String)">
            <summary>
            Pack the files into a zipped file
            </summary>
        </member>
        <member name="T:Ebaas.WebApi.Utils.UnpackDataPackageUtil">
            <summary>
            Utility that unpacks a data package and restore data in the package to the database
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.UnpackDataPackageUtil.ImportDataPackage(System.Net.Http.HttpRequestMessage)">
            <summary>
            Import a data package file
            </summary>
            <param name="request"></param>
            <returns>Import status</returns>
        </member>
        <member name="M:Ebaas.WebApi.Utils.UnpackDataPackageUtil.UnpackFiles(System.String)">
            <summary>
            Unpack the files into a directory
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.UnpackDataPackageUtil.ReadMetaData">
            <summary>
            Read meta data from the files
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ebaas.WebApi.Utils.UnpackDataPackageUtil.ModifySchema(Newtera.Data.CMConnection)">
            <summary>
            Create the database according to the meta data
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.UnpackDataPackageUtil.LoadInstances(Newtera.Data.CMConnection)">
            <summary>
            Load the instnaces into the database
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.UnpackDataPackageUtil.UpdateRelationships">
            <summary>
            Establish the relationships among instances
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.UnpackDataPackageUtil.LoadImages(Newtera.Data.CMConnection)">
            <summary>
            Upload images to the database
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.UnpackDataPackageUtil.LoadInstanceAttachements(Newtera.Data.CMConnection)">
            <summary>
            Upload instace attachments to the database
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.UnpackDataPackageUtil.LoadFormTemplates(Newtera.Data.CMConnection)">
            <summary>
            Upload input form templates
            </summary>
        </member>
        <member name="M:Ebaas.WebApi.Utils.UnpackDataPackageUtil.LoadWordTemplates(Newtera.Data.CMConnection)">
            <summary>
            Upload word templates
            </summary>
        </member>
    </members>
</doc>
