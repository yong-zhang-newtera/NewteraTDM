<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Menu.MissHierarchyName" xml:space="preserve">
    <value>没有定义数据分类树</value>
  </data>
  <data name="Menu.Text" xml:space="preserve">
    <value>导航栏菜单</value>
  </data>
  <data name="MenuItem.MissNavigationURL" xml:space="preserve">
    <value>没有定义页面URL</value>
  </data>
  <data name="MenuItem.Text" xml:space="preserve">
    <value>操作菜单项</value>
  </data>
  <data name="SideMenu.Empty" xml:space="preserve">
    <value>导航栏必须包含一个导航菜单</value>
  </data>
  <data name="SideMenu.MissDefault" xml:space="preserve">
    <value>导航栏必须有一个名称为Default的导航菜单</value>
  </data>
  <data name="SideMenu.Text" xml:space="preserve">
    <value>导航栏</value>
  </data>
  <data name="SideMenuGroup.MissDatabase" xml:space="preserve">
    <value>导航栏菜单需要指定关联的数据库</value>
  </data>
  <data name="SideMenuGroup.NoChildren" xml:space="preserve">
    <value>导航栏菜单必须至少有一个菜单项</value>
  </data>
  <data name="SideMenuGroup.Text" xml:space="preserve">
    <value>导航栏菜单</value>
  </data>
  <data name="SiteMap.Empty" xml:space="preserve">
    <value>网站地图必须包含一个主菜单</value>
  </data>
  <data name="SiteMap.Text" xml:space="preserve">
    <value>网站地图</value>
  </data>
  <data name="SiteMapNode.InvalidSideMenuPath" xml:space="preserve">
    <value>指定的导航栏菜单不存在</value>
  </data>
  <data name="SiteMapNode.MissingURL" xml:space="preserve">
    <value>没有定义URL</value>
  </data>
  <data name="SiteMapNode.NoChildren" xml:space="preserve">
    <value>网站主菜单必须包含一个子菜单项</value>
  </data>
  <data name="SiteMapNode.Text" xml:space="preserve">
    <value>网站菜单项</value>
  </data>
  <data name="SiteMapNode.UnmatchedDatabase" xml:space="preserve">
    <value>与导航栏菜单指定的数据库不一致</value>
  </data>
  <data name="SiteMap.SameURL" xml:space="preserve">
    <value>网站地图节点的URL必须是不相同的.发现下面相同URL的节点 </value>
  </data>
  <data name="CustomCommandGroup.Text" xml:space="preserve">
    <value>定制命令组</value>
  </data>
  <data name="CustomCommand.Text" xml:space="preserve">
    <value>定制命令</value>
  </data>
  <data name="CustomCommandGroup.MissDatabase" xml:space="preserve">
    <value>定制命令组需要指定关联的数据库</value>
  </data>
  <data name="CustomCommandGroup.MissClassName" xml:space="preserve">
    <value>定制命令组需要指定关联的数据类</value>
  </data>
  <data name="CustomCommandGroup.NoChildren" xml:space="preserve">
    <value>定制命令组必须至少有一个定制命令</value>
  </data>
  <data name="CustomCommand.MissNavigationURL" xml:space="preserve">
    <value>定制命令必须指定URL</value>
  </data>
  <data name="SiteMapNode.SameChildTitle" xml:space="preserve">
    <value>发现相同显示名的子节点。子节点的显示名不能相同。</value>
  </data>
  <data name="SiteMapModelSet.AtLeastOneSiteMap" xml:space="preserve">
    <value>至少要定义一个网站地图</value>
  </data>
  <data name="SiteMapFile.Empty" xml:space="preserve">
    <value>必须指定网站地图的定义文件名</value>
  </data>
  <data name="SiteMenuFile.Empty" xml:space="preserve">
    <value>必须指定导航栏的定义文件名</value>
  </data>
  <data name="CustomCommandSetFile.Empty" xml:space="preserve">
    <value>必须指定定制命令的定义文件名</value>
  </data>
  <data name="PolicyFile.Empty" xml:space="preserve">
    <value>必须指定网站权限控制的定义文件名</value>
  </data>
</root>