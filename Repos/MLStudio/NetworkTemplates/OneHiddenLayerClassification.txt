imageShape = 28:28:1
labelDim = $labelDimension$
featScale = 1/256

# This model returns multiple nodes as a record, which
# can be accessed using .x syntax.
model(x) = {
	s1 = x * featScale
	h1 = DenseLayer {200, activation=ReLU} (s1) 
	z = LinearLayer {labelDim} (h1)
}

# inputs
features = Input {imageShape}
labels = Input {labelDim}

# apply model to features
out = model (features)

# loss and error computation
ce   = CrossEntropyWithSoftmax (labels, out.z)
errs = ClassificationError (labels, out.z)

# declare special nodes
featureNodes    = (features)
labelNodes      = (labels)
criterionNodes  = (ce)
evaluationNodes = (errs)
outputNodes     = (out.z)
