imageShape = 28:28:1 # image dimensions, 1 channel only
labelDim = $labelDimension$
featScale = 1/256
Scale{f} = x => Constant(f) .* x

model = Sequential (
	Scale {featScale} :
	ConvolutionalLayer {16, (5:5), pad = true} : ReLU : 
	MaxPoolingLayer    {(2:2), stride=(2:2)} :
	DenseLayer {64} : ReLU : 
	LinearLayer {labelDim}
)

# inputs
features = Input {imageShape}
labels = Input (labelDim)

# apply model to features
ol = model (features)

# loss and error computation
ce   = CrossEntropyWithSoftmax (labels, ol)
errs = ClassificationError (labels, ol)

# declare special nodes
featureNodes    = (features)
labelNodes      = (labels)
criterionNodes  = (ce)
evaluationNodes = (errs)
outputNodes     = (ol)
