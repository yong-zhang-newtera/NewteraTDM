<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SideMenuActions.Text" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="SideMenuDashboard.Text" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="SideMenuGroup.Text" xml:space="preserve">
    <value>Side Menu Group</value>
  </data>
  <data name="SideMenuItem.Text" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="SideMenuSearch.Text" xml:space="preserve">
    <value>Keyword Search</value>
  </data>
  <data name="SideMenuTree.Text" xml:space="preserve">
    <value>Tree</value>
  </data>
  <data name="SideMenuTrees.Text" xml:space="preserve">
    <value>All Trees</value>
  </data>
  <data name="SiteMapMenu.Text" xml:space="preserve">
    <value>Site Map Node</value>
  </data>
  <data name="SiteMapStudio.About" xml:space="preserve">
    <value>AboutSiteMapStudio.rtf</value>
  </data>
  <data name="SiteMapStudio.ConfirmSave" xml:space="preserve">
    <value>Are you sure to save the site map definition?</value>
  </data>
  <data name="SiteMapStudio.DeleteItem" xml:space="preserve">
    <value>Are you sure to delete the item</value>
  </data>
  <data name="SiteMapStudio.ExistName" xml:space="preserve">
    <value>The name exists</value>
  </data>
  <data name="SiteMapStudio.Exit" xml:space="preserve">
    <value>Are you sure that you wan to exit the application</value>
  </data>
  <data name="SiteMapStudio.InvalidTitle" xml:space="preserve">
    <value>Please enter a title</value>
  </data>
  <data name="SiteMapStudio.ValidatingError" xml:space="preserve">
    <value>There are validating errors on the model, do you want to view the errors.</value>
  </data>
  <data name="SiteMapStudioApp.InvalidAdminPassword" xml:space="preserve">
    <value>Invalid admin password</value>
  </data>
  <data name="SiteMapStudioApp.SideMenuFolder" xml:space="preserve">
    <value>Side Menu</value>
  </data>
  <data name="SiteMapStudioApp.SiteMapFolder" xml:space="preserve">
    <value>Main Menu</value>
  </data>
  <data name="SiteMapStudioApp.SiteMapSetFolder" xml:space="preserve">
    <value>Site Map Set</value>
  </data>
  <data name="SiteMapStudioApp.SiteMapRootNode" xml:space="preserve">
    <value>Site Map</value>
  </data>
  <data name="SitMapStudioApp.InvalidAdminID" xml:space="preserve">
    <value>Invalid admin id</value>
  </data>
  <data name="SiteMapStudioApp.OnlineHelp" xml:space="preserve">
    <value>SiteMapStudioHelp.chm</value>
  </data>
  <data name="SiteMapStudioApp.CustomCommandFolder" xml:space="preserve">
    <value>Custom Commands</value>
  </data>
  <data name="CustomCommandGroup.Text" xml:space="preserve">
    <value>Custom Command Group</value>
  </data>
  <data name="CustomCommand.Text" xml:space="preserve">
    <value>Custom Command</value>
  </data>
  <data name="SiteMapModel.Text" xml:space="preserve">
    <value>Sitemap Model</value>
  </data>
  <data name="SiteMapStudioApp.InvalidClassName" xml:space="preserve">
    <value>The class name has already been used by another Custom Command Group</value>
  </data>
	<data name="SiteMapStudioApp.RestartProcess" xml:space="preserve">
    <value>Restart the application server process to make the changes effective.</value>
  </data>
  <data name="SiteMapStudioApp.SelectDatabase" xml:space="preserve">
    <value>Please select a database first.</value>
  </data>
  <data name="SiteMapModel.InvalidStateParameters" xml:space="preserve">
    <value>Parameter must have a name and value</value>
  </data>
</root>