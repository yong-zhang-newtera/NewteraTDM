/*
* @(#)IListHandler.cs
*
* Copyright (c) 2003 Newtera, Inc. All rights reserved.
*
*/
namespace Newtera.Common.MetaData.Schema
{
	using System;
	using System.Collections.Specialized;

	/// <summary>
	/// Represents an interface for hanlder that retrieve a list of values used
	/// by a ListElement.
	/// </summary>
	/// <version> 1.0.0 05 Apr 2004 </version>
	/// <author> Yong Zhang</author>
	public interface IListHandler
	{
		/// <summary>
		/// Get a collection of enum values generated by the list handler
		/// </summary>
		/// <param name="context">The SchemaModelElement object constraint by the list values</param>
        /// <param name="query">The query used to get a list, can be null</param>
        /// <param name="parameter">The parameter value defined for the handler, could be null</param>
        /// <param name="filterValue">Any filter that is used to get a list, can be null</param>
        /// <param name="textField">The field that is used to get enum text, can be null</param>
        /// <param name="valueField">The field that is used to get enum value, can be null</param>
		/// <returns>A collection of EnumValue object</returns>
		EnumValueCollection GetValues(SchemaModelElement context, string query, string parameter, string filterValue, string textField, string valueField);

		/// <summary>
		/// Gets information indicating whether a given value is valid
		/// </summary>
		/// <param name="val">The given value</param>
		/// <param name="context">The SchemaModelElement object constraint by the list values</param>
		/// <returns>true if the value is valid, false, otherwise.</returns>
		bool IsValueValid(string val, SchemaModelElement context);

	}
}