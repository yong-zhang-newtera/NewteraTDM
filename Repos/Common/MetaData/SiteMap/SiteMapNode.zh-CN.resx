<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Database" xml:space="preserve">
    <value>数据库</value>
  </data>
  <data name="DatabaseDescription" xml:space="preserve">
    <value>指定与菜单项关联的数据库</value>
  </data>
  <data name="SideMenuPath" xml:space="preserve">
    <value>导航栏菜单路径</value>
  </data>
  <data name="SideMenuPathDescription" xml:space="preserve">
    <value>指定与菜单项关联的导航栏菜单</value>
  </data>
  <data name="SystemCategory" xml:space="preserve">
    <value>系统</value>
  </data>
  <data name="Url" xml:space="preserve">
    <value>模块URL</value>
  </data>
  <data name="UrlDescription" xml:space="preserve">
    <value>指定菜单项的模块URL</value>
  </data>
	<data name="ImageUrl" xml:space="preserve">
    <value>图标名称</value>
  </data>
	<data name="ImageUrlDescription" xml:space="preserve">
    <value>指定菜单项的图标名称</value>
  </data>
	<data name="IsVisible" xml:space="preserve">
    <value>是否显示</value>
  </data>
	<data name="IsVisibleDescription" xml:space="preserve">
    <value>是否在界面显示该菜单项?</value>
  </data>
	<data name="PopupSettings" xml:space="preserve">
    <value>弹出窗口设置</value>
  </data>
	<data name="PopupSettingsDescription" xml:space="preserve">
    <value>指定弹出窗口的尺寸和位置（宽,长,上,左）。如不设置，使用系统默认值，全部设置为零，表示全屏显示</value>
  </data>
	<data name="ShowNotification" xml:space="preserve">
    <value>是否显示提示</value>
  </data>
	<data name="ShowNotificationDescription" xml:space="preserve">
    <value>指定是否在首页的图标上显示红色的提示</value>
  </data>
	<data name="NotificationHandler" xml:space="preserve">
    <value>获取提示URL</value>
  </data>
	<data name="NotificationHandlerDescription" xml:space="preserve">
    <value>指定获取提示信息的URL，例如：GetTaskNumberHandler.ashx</value>
  </data>
	<data name="AppearanceCategory" xml:space="preserve">
    <value>外观</value>
  </data>
  <data name="ClassName" xml:space="preserve">
    <value>数据类</value>
  </data>
  <data name="ClassNameDescription" xml:space="preserve">
    <value>指定与菜单项关联的数据类</value>
  </data>
  <data name="StateParameters" xml:space="preserve">
    <value>模块参数</value>
  </data>
  <data name="StateParametersDescription" xml:space="preserve">
    <value>指定模块的特殊参数</value>
  </data>
  <data name="HelpDoc" xml:space="preserve">
    <value>帮助文档</value>
  </data>
  <data name="HelpDocDescription" xml:space="preserve">
    <value>指定该菜单项的PDF格式的帮助文档（例如 MySpaceHelp.pdf）</value>
  </data>
  <data name="HashCode" xml:space="preserve">
    <value>哈希码</value>
  </data>
  <data name="HashCodeDescription" xml:space="preserve">
    <value>用于识别该查单项的哈希码</value>
  </data>
  <data name="BaseUrl" xml:space="preserve">
    <value>服务器基地址</value>
  </data>
  <data name="BaseUrlDescription" xml:space="preserve">
    <value>指定改菜单访问的应用服务器基地址（例如：http://192.168.1.101)。若为空，则该菜单访问默认的应用服务器。</value>
  </data>
</root>