//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from XQuery.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591


   // global code stuff that will be included in the source file just before the 'XQueryParser' class below
	using System.Collections;
	using Newtera.Server.Engine.Interpreter;
	using Newtera.Server.Engine.Vdom;

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="XQueryParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public interface IXQueryListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] XQueryParser.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] XQueryParser.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.queryModule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQueryModule([NotNull] XQueryParser.QueryModuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.queryModule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQueryModule([NotNull] XQueryParser.QueryModuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.importAs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportAs([NotNull] XQueryParser.ImportAsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.importAs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportAs([NotNull] XQueryParser.ImportAsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.exprSequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprSequence([NotNull] XQueryParser.ExprSequenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.exprSequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprSequence([NotNull] XQueryParser.ExprSequenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] XQueryParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] XQueryParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.pathExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPathExpression([NotNull] XQueryParser.PathExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.pathExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPathExpression([NotNull] XQueryParser.PathExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.path"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPath([NotNull] XQueryParser.PathContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.path"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPath([NotNull] XQueryParser.PathContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.xstep"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXstep([NotNull] XQueryParser.XstepContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.xstep"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXstep([NotNull] XQueryParser.XstepContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.basicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBasicExpression([NotNull] XQueryParser.BasicExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.basicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBasicExpression([NotNull] XQueryParser.BasicExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicate([NotNull] XQueryParser.PredicateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicate([NotNull] XQueryParser.PredicateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] XQueryParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] XQueryParser.VariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.flwrExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlwrExpr([NotNull] XQueryParser.FlwrExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.flwrExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlwrExpr([NotNull] XQueryParser.FlwrExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.flClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlClause([NotNull] XQueryParser.FlClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.flClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlClause([NotNull] XQueryParser.FlClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.forClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForClause([NotNull] XQueryParser.ForClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.forClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForClause([NotNull] XQueryParser.ForClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.letClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetClause([NotNull] XQueryParser.LetClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.letClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetClause([NotNull] XQueryParser.LetClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhereClause([NotNull] XQueryParser.WhereClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhereClause([NotNull] XQueryParser.WhereClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.sortByClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSortByClause([NotNull] XQueryParser.SortByClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.sortByClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSortByClause([NotNull] XQueryParser.SortByClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.sortSpecList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSortSpecList([NotNull] XQueryParser.SortSpecListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.sortSpecList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSortSpecList([NotNull] XQueryParser.SortSpecListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.sortSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSortSpec([NotNull] XQueryParser.SortSpecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.sortSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSortSpec([NotNull] XQueryParser.SortSpecContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.logicalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalOrExpression([NotNull] XQueryParser.LogicalOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.logicalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalOrExpression([NotNull] XQueryParser.LogicalOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.logicalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalAndExpression([NotNull] XQueryParser.LogicalAndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.logicalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalAndExpression([NotNull] XQueryParser.LogicalAndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.rangeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRangeExpression([NotNull] XQueryParser.RangeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.rangeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRangeExpression([NotNull] XQueryParser.RangeExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualityExpression([NotNull] XQueryParser.EqualityExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualityExpression([NotNull] XQueryParser.EqualityExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalExpression([NotNull] XQueryParser.RelationalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalExpression([NotNull] XQueryParser.RelationalExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveExpression([NotNull] XQueryParser.AdditiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveExpression([NotNull] XQueryParser.AdditiveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicativeExpression([NotNull] XQueryParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicativeExpression([NotNull] XQueryParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpression([NotNull] XQueryParser.UnaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpression([NotNull] XQueryParser.UnaryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.primitiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveExpression([NotNull] XQueryParser.PrimitiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.primitiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveExpression([NotNull] XQueryParser.PrimitiveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] XQueryParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] XQueryParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] XQueryParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] XQueryParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.ifExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfExpr([NotNull] XQueryParser.IfExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.ifExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfExpr([NotNull] XQueryParser.IfExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.elementConstructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementConstructor([NotNull] XQueryParser.ElementConstructorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.elementConstructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementConstructor([NotNull] XQueryParser.ElementConstructorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.elementContents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementContents([NotNull] XQueryParser.ElementContentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.elementContents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementContents([NotNull] XQueryParser.ElementContentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttribute([NotNull] XQueryParser.AttributeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttribute([NotNull] XQueryParser.AttributeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="XQueryParser.enclosedExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnclosedExpr([NotNull] XQueryParser.EnclosedExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="XQueryParser.enclosedExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnclosedExpr([NotNull] XQueryParser.EnclosedExprContext context);
}
